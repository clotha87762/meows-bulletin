[{"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\index.js":"1","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\App.js":"2","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\reportWebVitals.js":"3","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\sideComponent.js":"4","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\mainComponent.js":"5","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainActions.js":"6","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\webapi.js":"7","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\ActionTypes.js":"8","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\createStore.js":"9","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainReducers.js":"10","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\loginComponent.js":"11","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginReducers.js":"12","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginAction.js":"13","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinReducers.js":"14","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinActions.js":"15","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appActions.js":"16","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appReducers.js":"17","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bulletinComponent.js":"18","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\common\\DateFormat.js":"19","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\profileComponent.js":"20","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bottomComponent.js":"21"},{"size":832,"mtime":1607379842836,"results":"22","hashOfConfig":"23"},{"size":2834,"mtime":1609359799612,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":2282,"mtime":1607700873713,"results":"26","hashOfConfig":"23"},{"size":4749,"mtime":1609292440729,"results":"27","hashOfConfig":"23"},{"size":482,"mtime":1606986715137,"results":"28","hashOfConfig":"23"},{"size":24454,"mtime":1609362799300,"results":"29","hashOfConfig":"23"},{"size":1095,"mtime":1609361935892,"results":"30","hashOfConfig":"23"},{"size":616,"mtime":1607344578764,"results":"31","hashOfConfig":"23"},{"size":755,"mtime":1607016223179,"results":"32","hashOfConfig":"23"},{"size":10561,"mtime":1609347827967,"results":"33","hashOfConfig":"23"},{"size":985,"mtime":1607339232167,"results":"34","hashOfConfig":"23"},{"size":723,"mtime":1607339156403,"results":"35","hashOfConfig":"23"},{"size":4295,"mtime":1609362064853,"results":"36","hashOfConfig":"23"},{"size":1720,"mtime":1609362002685,"results":"37","hashOfConfig":"23"},{"size":413,"mtime":1607951287701,"results":"38","hashOfConfig":"23"},{"size":1254,"mtime":1607969292890,"results":"39","hashOfConfig":"23"},{"size":20267,"mtime":1609284303183,"results":"40","hashOfConfig":"23"},{"size":2236,"mtime":1607380213044,"results":"41","hashOfConfig":"23"},{"size":10870,"mtime":1609285121048,"results":"42","hashOfConfig":"23"},{"size":5723,"mtime":1608081814756,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"9rwoeb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\index.js",[],["96","97"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\App.js",["98","99","100","101","102","103"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\reportWebVitals.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\sideComponent.js",["104"],"import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './css/sideComponent.css'\r\n\r\n\r\nconst sideComponent = ({ isAuthed, userAlias, logout }) => {\r\n\r\n    if (isAuthed) {\r\n        return (\r\n            <div className='sidePanel'>\r\n                <div style={{ fontSize: '18px' }}>\r\n                    <b>\r\n                        {\"HELLLLO \" + userAlias}\r\n                    </b>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;BULLETIN\r\n                </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/bulletin/profile' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;PROFILE\r\n                </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/logout' className='navlink' activeClassName='activeSide' onClick={logout}>\r\n                        <span className=\"fa fa-user-alt-slash\" /> &nbsp;LOGOUT\r\n                </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='sidePanel'>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div style={{ height: '2px' }} />\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/login' className='navlink' activeClassName='activeSide'>\r\n                    <span className=\"fa fa-user-circle\" /> &nbsp;LOGIN\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default sideComponent","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\mainComponent.js",["105","106","107","108","109","110","111","112","113","114","115","116"],"import { Component } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport { Container, Col, Row, CardImg, Card, CardBody, CardText, Button } from 'reactstrap'\r\nimport { action } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { set_news_ready, set_news, set_news_index } from '../redux/mainActions'\r\nimport { withRouter } from 'react-router-dom'\r\nimport webAPI from '../webapi'\r\nimport './css/mainComponent.css'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(state.main)\r\n    return {\r\n        newsReady: state.main.newsReady,\r\n        openedIndex: state.main.openedIndex,\r\n        news: state.main.news\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setOpenedIndex: (index) => { dispatch(set_news_index(index)) },\r\n    getNews: () => { webAPI.getNews(dispatch) }\r\n})\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.renderNews = this.renderNews.bind(this)\r\n        this.newsEntry = this.newsEntry.bind(this)\r\n\r\n        this.newsBoardRef = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('yooo')\r\n        console.log(this.props)\r\n        this.props.getNews()\r\n    }\r\n\r\n    newsEntry(index, item) {\r\n        let isOpen = index === this.props.openedIndex\r\n        return (\r\n            <div key={index} onClick={() => this.props.setOpenedIndex(index)}>\r\n                <div style={{ lineHeight: '40px', minHeight: '40px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                    <div className='entryTitle'>\r\n                        <span ><b style={{ float: 'left', fontSize:'10px' , marginLeft:'3px' }}>{new Date(item.modifyDate).toLocaleDateString(\"en-US\")}  </b>\r\n                        <b>{item.title}</b></span>\r\n                        <br />\r\n                        <div className='newsEntry' style={{ transition: 'max-height 0.6s ease-out', maxHeight: isOpen ? '100px' : '0px', fontSize: '15px' }}>\r\n                            {isOpen ? item.content : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    renderNews() {\r\n        console.log(this.props.newsReady)\r\n        if (this.props.newsReady) {\r\n\r\n            return (\r\n\r\n                <div>\r\n                    {\r\n                        this.props.news.map(\r\n                            (item, index) => {\r\n                                return this.newsEntry(index, item)\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ lineHeight: '90px', height: '90px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                    <b> News Now Loading... </b>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let news = this.renderNews()\r\n\r\n        return (\r\n            <div className='container' style={{ color: '#333333' }}>\r\n                <div style={{ height: '10vh' }}></div>\r\n                <Row>\r\n                    <Col sm={{ size: 10 }} md={{ offset: 4, size: 3 }}>\r\n                        <img src='./assets/cat.png'></img>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{ height: '10px' }} />\r\n                <Row>\r\n                    <Col sm={{ size: 12 }} md={{ offset: 3, size: 6 }}>\r\n                        <div style={{\r\n                            overflow: 'auto', maxHeight: '40vh', boxShadow: '10px 5px 10px',\r\n                            border: 'solid 2px', borderColor: `rgba(30,30,30,1.0)`, borderRadius: '5px'\r\n                        }}>\r\n\r\n                            <div style={{ lineHeight: '40px', height: '40px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                                <b>-----NEWS-----</b>\r\n                            </div>\r\n\r\n                            {news}\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(MainComponent))","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainActions.js",["117"],"import {SET_NEWS_INDEX , SET_NEWS_READY , SET_NEWS} from './ActionTypes'\r\nimport {createActions} from 'redux-actions'\r\n\r\n\r\nexport const set_news_index = (index) => (\r\n    {\r\n        type: SET_NEWS_INDEX,\r\n        payload: index\r\n    }\r\n)\r\nexport const set_news_ready =(ready) =>(\r\n    {\r\n        type: SET_NEWS_READY,\r\n        payload: ready\r\n    }\r\n )// boolean\r\nexport const set_news = (news) =>(\r\n    {\r\n        type: SET_NEWS,\r\n        payload: news\r\n    }\r\n) // array of object","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\webapi.js",["118","119","120","121","122","123","124","125","126","127","128","129"],"import axios from 'axios'\r\nimport { browserHistory } from 'react-router'\r\nimport Immutable from 'immutable'\r\nimport { set_news_ready, set_news } from './redux/mainActions'\r\nimport { on_login, on_sign_up, set_login_error_msg, set_sign_up_error_msg, set_sign_up_form } from './redux/loginAction'\r\nimport {  set_user_list , set_other_posts, set_other_profile, delete_post, edit_post, set_random_posts, set_posts, set_search_user, set_posts_ready, show_create_post, show_search_user } from './redux/bulletinActions'\r\nimport { edit_profile, set_login, set_profile } from './redux/appActions'\r\nimport { createBrowserHistory } from 'history'\r\nimport Cookies from 'universal-cookie';\r\n\r\nvar cookies = new Cookies()\r\n\r\nexport default {\r\n\r\n    checkAuth: (dispatch, token) => {\r\n\r\n    },\r\n\r\n    getCookie: keyName => {\r\n        let cookies = document.cookie.split(';');\r\n        let targetCookie = cookies.filter(cookie => {\r\n            return cookie.split(':')[0].trim() === keyName;\r\n        });\r\n\r\n        if (targetCookie.length > 1) {\r\n            return targetCookie[0];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n    getNews: (dispatch) => {\r\n\r\n        dispatch(set_news_ready(false))\r\n\r\n        axios(\r\n            {\r\n                method: 'get',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/news',\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n\r\n                    if (result.status === 200) {\r\n                        console.log('news fetched!')\r\n                        console.log(result)\r\n                        setTimeout(() => {\r\n                            dispatch(set_news(result.data))\r\n                            dispatch(set_news_ready(true))\r\n                        }, 1000)\r\n                    }\r\n                    else {\r\n                        throw result\r\n                    }\r\n\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    console.log('fetch news error:')\r\n                    console.log(err)\r\n                }\r\n            )\r\n\r\n        /*\r\n        let news = [\r\n            {\r\n                date: new Date(),\r\n                title: 'im so horny',\r\n                content: 'fuck me hard'\r\n            },\r\n            {\r\n                date: new Date(),\r\n                title: 'Yoooooooo',\r\n                content: 'front end sucksddddddddddddddddddddddddd\\n ssssssssssssss\\n eeeeeeeeeee'\r\n            },\r\n            {\r\n                date: new Date(),\r\n                title: '$$$$$$$',\r\n                content: 'what the fuckkkk'\r\n            }\r\n        ]\r\n        */\r\n\r\n        //setTimeout(() => { dispatch(set_news(news)) }, 3000)\r\n        //setTimeout(() => { dispatch(set_news_ready(true)) }, 3100)\r\n    },\r\n\r\n    fetchPosts: (dispatch) => {\r\n\r\n        let Map = Immutable.Map\r\n        let mockPosts = Immutable.fromJS([\r\n            {\r\n                _id: '666',\r\n                user: \"aaaa123\",\r\n                alias: \"Alan\",\r\n                date: new Date('2020-10-10'),\r\n                content: 'wowwwwwww\\n im so boring \\n fuck react',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"444\",\r\n                user: \"aaaa123\",\r\n                alias: \"Alan\",\r\n                date: new Date('2020-10-12'),\r\n                content: 'ddddddddddddddddddddddddddddddd\\ndddddddd\\n\\n\\n\\ndddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: '333',\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                date: new Date('2020-10-13'),\r\n                content: 'gggggggggggggggggg\\n ddddddddddd\\n\\nddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"123\",\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                date: new Date('2020-10-11'),\r\n                content: 'kkkkkkkkkkkkkkk\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12355\",\r\n                user: \"cccgggg\",\r\n                alias: \"Cat\",\r\n                date: new Date('2020-11-11'),\r\n                content: 'cccccccccccccccccc\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12366\",\r\n                user: \"cccgggg\",\r\n                alias: \"Cat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'qqqqqqqqqqqqqqqqqwwww\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"ddddd\",\r\n                user: \"dddggg\",\r\n                alias: \"Dog\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'doggggggggggg\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"dddd22d\",\r\n                user: \"dddggg\",\r\n                alias: \"Dog\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'asfdsgfreherreg\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"1233366\",\r\n                user: \"eeegggg\",\r\n                alias: \"Eat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'qqqqqqqqqqqqqqqqqwwww\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12361236\",\r\n                user: \"eeegggg\",\r\n                alias: \"Eat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'EEEEEEEEEEEEEEEEEEEEEEE\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            }\r\n        ])\r\n\r\n\r\n        dispatch(set_posts_ready(false))\r\n\r\n        axios(\r\n            {\r\n                method: 'get',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/posts',\r\n                withCredentials: true,\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n                    if (result.status === 200) {\r\n\r\n                        let posts = result.data\r\n                        console.log('get posts!')\r\n                        console.log(posts)\r\n\r\n                        setTimeout(() => {\r\n\r\n                            dispatch(set_posts(Immutable.fromJS(posts)))\r\n                            dispatch(set_posts_ready(true))\r\n\r\n                        }, 1500)\r\n\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    let response = err.response\r\n                    console.log(response.data.showError)\r\n                }\r\n            )\r\n\r\n        //setTimeout(() => { dispatch(set_posts(posts)) }, 2000)\r\n        //setTimeout(() => { dispatch(set_posts_ready(true)) }, 2100)\r\n    },\r\n\r\n    fetchUserPost: (dispatch, userId) => {\r\n        let mockPosts = Immutable.fromJS([\r\n            {\r\n                _id: '666',\r\n                user: \"aaaa123\",\r\n                alias: \"Alan\",\r\n                date: new Date('2020-10-10'),\r\n                content: 'wowwwwwww\\n im so boring \\n fuck react',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"444\",\r\n                user: \"aaaa123\",\r\n                alias: \"Alan\",\r\n                date: new Date('2020-10-12'),\r\n                content: 'ddddddddddddddddddddddddddddddd\\ndddddddd\\n\\n\\n\\ndddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: '333',\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                date: new Date('2020-10-13'),\r\n                content: 'gggggggggggggggggg\\n ddddddddddd\\n\\nddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"123\",\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                date: new Date('2020-10-11'),\r\n                content: 'kkkkkkkkkkkkkkk\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12355\",\r\n                user: \"cccgggg\",\r\n                alias: \"Cat\",\r\n                date: new Date('2020-11-11'),\r\n                content: 'cccccccccccccccccc\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12366\",\r\n                user: \"cccgggg\",\r\n                alias: \"Cat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'qqqqqqqqqqqqqqqqqwwww\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"ddddd\",\r\n                user: \"dddggg\",\r\n                alias: \"Dog\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'doggggggggggg\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"dddd22d\",\r\n                user: \"dddggg\",\r\n                alias: \"Dog\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'asfdsgfreherreg\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"1233366\",\r\n                user: \"eeegggg\",\r\n                alias: \"Eat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'qqqqqqqqqqqqqqqqqwwww\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            },\r\n            {\r\n                _id: \"12361236\",\r\n                user: \"eeegggg\",\r\n                alias: \"Eat\",\r\n                date: new Date('2020-12-11'),\r\n                content: 'EEEEEEEEEEEEEEEEEEEEEEE\\ndddddddddddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            }\r\n        ])\r\n\r\n        /*\r\n        let mockUserPosts = mockPosts.filter(\r\n            (item) => {\r\n                return item.get('user') === userAccount\r\n            }\r\n        )\r\n        */\r\n\r\n        // clear the other posts to activate loading component\r\n        set_other_posts(Immutable.fromJS(Immutable.List()))\r\n\r\n        axios(\r\n            {\r\n                method: 'get',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/posts/user/' + userId,\r\n                withCredentials: true,\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n                    if (result.status === 200) {\r\n\r\n                        let userPosts = result.data\r\n                        console.log('get user posts!')\r\n                        console.log(userPosts)\r\n\r\n                        setTimeout(() => {\r\n                            dispatch(set_other_posts(Immutable.fromJS(userPosts)))\r\n                            //dispatch(set_posts(Immutable.fromJS(posts)))\r\n                            //dispatch(set_posts_ready(true))\r\n\r\n                        }, 1500)\r\n\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    let response = err.response\r\n                    console.log(response.data.showError)\r\n                }\r\n            )\r\n\r\n        //dispatch(set_posts_ready(false))\r\n        //setTimeout(() => { dispatch(set_other_posts(userPosts)) }, 1000)\r\n    },\r\n\r\n    fetchRandomPosts: (dispatch) => {\r\n\r\n\r\n\r\n        let posts = Immutable.List([\r\n            {\r\n                user: \"aaaa123\",\r\n                alias: \"dlan\",\r\n                date: new Date('2020-10-10'),\r\n                content: 'wowwwwwww\\n im so boring \\n fuck react',\r\n                image: null\r\n            },\r\n            {\r\n                user: \"aaaa123\",\r\n                alias: \"blan\",\r\n                date: new Date('2020-10-12'),\r\n                content: 'ddddddddddddddddddddddddd\\ndddddddd\\n\\n\\n\\ndddddddddddd\\naaaaaaaaasss',\r\n                image: null\r\n            }]\r\n        )\r\n\r\n        dispatch(set_posts_ready(false))\r\n        setTimeout(() => { dispatch(set_random_posts(posts)) }, 2000)\r\n        setTimeout(() => { dispatch(set_posts_ready(true)) }, 2100)\r\n    },\r\n\r\n    fetchNewPosts: (dispatch) => {\r\n        //\r\n        //  fetch new posts in a every x seconds interval\r\n        //\r\n    },\r\n\r\n    fetchUsers: (dispatch, userPrefix, userList = Immutable.List(), fetchNewList = true) => {\r\n\r\n        let mockUsers = Immutable.fromJS([\r\n            {\r\n                user: \"aaaa123\",\r\n                alias: \"Alan\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"aaaa456\",\r\n                alias: \"AAlan\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"AAAAAA456\",\r\n                alias: \"Allan\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"aaa456aaaa\",\r\n                alias: \"AlanAAA\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"aa123aaaa\",\r\n                alias: \"AAAlan\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"bbbb12333\",\r\n                alias: \"BBob\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"bb123123bb\",\r\n                alias: \"Bobbb\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"bb3333bb\",\r\n                alias: \"Booooob\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n            {\r\n                user: \"bbbb45bbbbbb\",\r\n                alias: \"BBBoBb\",\r\n                image: '/assets/yoo.png'\r\n            },\r\n\r\n        ]\r\n        )\r\n        let mockUserJS = users.toJS()\r\n\r\n        let users\r\n\r\n        if (fetchNewList) {\r\n            axios(\r\n                {\r\n                    method: 'get',\r\n                    baseURL: 'http://localhost:3000',\r\n                    url: '/users',\r\n                    withCredentials: true,\r\n                }\r\n            )\r\n                .then(\r\n                    (result) => {\r\n                        if (result.status === 200) {\r\n\r\n                            users = result.data\r\n                            console.log('get user posts!')\r\n                            console.log(users)\r\n\r\n                            setTimeout(() => {\r\n                                dispatch(show_search_user(false))\r\n                                dispatch( set_user_list(Immutable.fromJS(users) ))\r\n                                setTimeout(() => { dispatch(show_search_user(true)) }, 1100)\r\n                                setTimeout(() => { dispatch(set_search_user(users)) }, 1000)\r\n\r\n                            }, 1000)\r\n\r\n                        }\r\n                        else {\r\n                            throw result\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    err => {\r\n                        let response = err.response\r\n                        console.log(response.data.showError)\r\n                    }\r\n                )\r\n        }\r\n        else {\r\n            users = userList.toJS()\r\n            users = users.filter(\r\n                (item) => {\r\n                    return item.alias.toLowerCase().startsWith(userPrefix.toLowerCase())\r\n                }\r\n            )\r\n            console.log('users')\r\n            console.log(users)\r\n\r\n            if (userPrefix.trim().replace(/[^A-Za-z']/g, \"\") === '') {\r\n                users = []\r\n            }\r\n\r\n            dispatch(show_search_user(false))\r\n            setTimeout(() => { dispatch(show_search_user(true)) }, 1100)\r\n            setTimeout(() => { dispatch(set_search_user(users)) }, 1000)\r\n        }\r\n\r\n    },\r\n\r\n    followUser: (dispatch, followee) => { // false if user not exist or already folloed\r\n\r\n    },\r\n\r\n    unfollowUser: (dispatch, followee) => {\r\n\r\n    },\r\n\r\n    editPost: (dispatch, postId, postContent, postImg) => {\r\n        let payload = {\r\n            id: postId,\r\n            content: postContent,\r\n            image: postImg\r\n        }\r\n        dispatch(edit_post(payload))\r\n    },\r\n\r\n    deletePost: (dispatch, postId) => {\r\n\r\n        setTimeout(() => { dispatch(delete_post(postId)) }, 1200)\r\n\r\n    },\r\n\r\n    editProfile: (dispatch, edit) => {\r\n        let toMerge = {}\r\n        if (edit.hasOwnProperty('alias'))\r\n            toMerge.alias = edit.alias\r\n        if (edit.hasOwnProperty('profileImage'))\r\n            toMerge.profileImage = edit.profileImage\r\n        if (edit.hasOwnProperty('intro'))\r\n            toMerge.intro = edit.intro\r\n\r\n        dispatch(edit_profile(toMerge))\r\n    },\r\n\r\n    fetchProfile: (dispatch, profileId, callBack) => {\r\n        let otherProfiles = [\r\n            {\r\n                user: \"aaaa123\",\r\n                alias: \"Alann\",\r\n                profileImage: '/assets/yoo.png',\r\n                intro: \"1231231231231231\\n123123123123\\n123123123123\"\r\n            },\r\n            {\r\n                user: \"bbbb456\",\r\n                alias: \"Bob\",\r\n                profileImage: '/assets/yoo.png',\r\n                intro: 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbb'\r\n            },\r\n            {\r\n                user: \"cccc025\",\r\n                alias: \"CCAT\",\r\n                profileImage: '/assets/yoo.png',\r\n                intro: 'ccccccccccccccccccccccccccc\\nccccccccccccccccccccccccc\\ncccccccccc'\r\n            },\r\n            {\r\n                user: \"dddd033\",\r\n                alias: \"DOGGGEE\",\r\n                profileImage: '/assets/yoo.png',\r\n                intro: 'ddddddddddddddddddddddd\\ndddddddddddddddddddddddddddd\\ndddddddddddddddd'\r\n            },\r\n            {\r\n                user: \"EEEEE\",\r\n                alias: \"Elephant\",\r\n                profileImage: '/assets/yoo.png',\r\n                intro: 'eeeeeeeeeeeeeeeeeeeeee\\neeeeeeeeeeeeeeeeeeeee\\neeeeeeeeeeeeee'\r\n            },\r\n        ]\r\n\r\n        let profile = otherProfiles.filter(\r\n            (item) => {\r\n                return item.user === profileId\r\n            }\r\n        )\r\n        console.assert(profile.length === 1, { profile: profile })\r\n\r\n        setTimeout(() => { dispatch(set_other_profile(profile[0])) }, 1000)\r\n        setTimeout(() => { callBack.setState({ profileReady: true }) }, 1000)\r\n    },\r\n\r\n    login: (dispatch, account, password) => {\r\n\r\n        /*\r\n        let profile = Immutable.fromJS({\r\n            user: \"aaaa123\",\r\n            alias: \"Alann\",\r\n            profileImage: '/assets/yoo.png',\r\n            intro: \"1231231231231231\\n123123123123\\n123123123123\",\r\n            followees : [ 'bbbb12333' , 'bb123123bb' ],\r\n        })\r\n        */\r\n\r\n        dispatch(on_login())\r\n        console.log('login api')\r\n        console.log(account)\r\n        console.log(password)\r\n\r\n        axios(\r\n            {\r\n                method: 'post',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/manage/login',\r\n                auth: {\r\n                    username: account,\r\n                    password: password\r\n                },\r\n                withCredentials: true\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n\r\n                    if (result.status === 200) {\r\n\r\n                        console.log('result')\r\n                        console.log(result)\r\n                        console.log('cookie')\r\n                        console.log(document.cookie)\r\n\r\n                        let profile = result.data\r\n                        profile.user = profile.account\r\n                        profile.profileImage = '/assets/yoo.png'\r\n                        delete profile.account\r\n\r\n                        setTimeout(\r\n                            () => {\r\n                                console.log(profile)\r\n                                dispatch(set_profile(Immutable.fromJS(profile)))\r\n\r\n                                dispatch(set_login_error_msg(''))\r\n                                dispatch(set_login(true))\r\n\r\n                                //cookies.set('session-id', this.state.loginAccount , { path: '/' })\r\n                            },\r\n                            1000\r\n                        )\r\n                    }\r\n                    else {\r\n                        throw result\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    let response = err.response\r\n                    console.log(err.response)\r\n                    console.log(JSON.stringify(err))\r\n                    dispatch(set_login_error_msg(response.data.showError))\r\n                }\r\n            )\r\n\r\n        //dispatch(set_profile(profile))\r\n        //dispatch(on_login())\r\n        //setTimeout(() => { dispatch(set_login_error_msg('fuck login')) }, 3000)\r\n        //dispatch(set_profile(profile))\r\n        //setTimeout(() => { dispatch(set_login(true)) }, 2000)\r\n    },\r\n\r\n    loginWithSession: (dispatch) => {\r\n\r\n        console.log('login with session')\r\n\r\n        axios(\r\n            {\r\n                method: 'post',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/manage/login',\r\n                withCredentials: true\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n\r\n                    if (result.status === 200) {\r\n\r\n                        let profile = result.data\r\n                        profile.user = profile.account\r\n                        profile.profileImage = '/assets/yoo.png'\r\n                        delete profile.account\r\n\r\n                        console.log(profile)\r\n                        dispatch(set_profile(Immutable.fromJS(profile)))\r\n                        dispatch(set_login(true))\r\n\r\n                    }\r\n                    else {\r\n                        throw result\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    let response = err.response\r\n                    console.log(err.response)\r\n                    console.log(JSON.stringify(err))\r\n                    //dispatch(set_login_error_msg(response.data.showError))\r\n                }\r\n            )\r\n\r\n    },\r\n\r\n    logout: (dispatch) => {\r\n\r\n        console.log('log out')\r\n        axios(\r\n            {\r\n                method: 'get',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/manage/logout',\r\n                withCredentials: true,\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n                    if (result.status === 200) {\r\n                        dispatch(set_profile(null))\r\n                        dispatch(set_login(false))\r\n                    }\r\n\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    console.log(err)\r\n                }\r\n            )\r\n\r\n        //dispatch(set_profile(null))\r\n        //dispatch(set_login(false))\r\n        //createBrowserHistory().push('/')    \r\n    },\r\n\r\n    signup: (dispatch, account, password) => {\r\n        dispatch(on_sign_up())\r\n        axios(\r\n            {\r\n                method: 'post',\r\n                baseURL: 'http://localhost:3000',\r\n                url: '/users',\r\n                data: {\r\n                    user: {\r\n                        account: account,\r\n                        password: password,\r\n                    }\r\n                },\r\n                withCredentials: true,\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        )\r\n            .then(\r\n                (result) => {\r\n                    dispatch(set_sign_up_form(false))\r\n                    dispatch(set_login_error_msg('Sign up successfully!!'))\r\n                    dispatch(set_sign_up_error_msg(''))\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    console.log('error')\r\n                    console.log(err)\r\n                    let response = err.response\r\n                    dispatch(set_sign_up_error_msg(response.data.showError))\r\n                }\r\n            )\r\n        //setTimeout(() => { dispatch(set_sign_up_error_msg('fuck signup')) }, 3000)\r\n\r\n    }\r\n\r\n}","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\ActionTypes.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\createStore.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\loginComponent.js",["130","131","132","133","134","135","136","137","138","139","140","141"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginAction.js",["142"],"// @ts-check \r\nimport { SET_SIGN_UP_FORM , SET_LOGIN_ERROR_MSG , ON_LOGIN , ON_SIGN_UP , SET_SIGN_UP_ERROR_MSG} from './ActionTypes'\r\nimport {createActions} from 'redux-actions'\r\n\r\n\r\nexport const set_sign_up_form = (show) => (\r\n    {\r\n        type: SET_SIGN_UP_FORM,\r\n        payload: show\r\n    }\r\n)\r\nexport const set_login_error_msg = (error) =>(\r\n    {\r\n        type: SET_LOGIN_ERROR_MSG,\r\n        payload: error\r\n    }\r\n )\r\n\r\n export const set_sign_up_error_msg = (error) =>(\r\n    {\r\n        type: SET_SIGN_UP_ERROR_MSG,\r\n        payload: error\r\n    }\r\n )\r\n\r\n export const on_login = () =>(\r\n     {\r\n        type: ON_LOGIN,\r\n     }\r\n )\r\n\r\n export const on_sign_up = () =>(\r\n    {\r\n       type: ON_SIGN_UP,\r\n    }\r\n)\r\n\r\n ","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinActions.js",["143"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appActions.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bulletinComponent.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import { Component, createElement } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport { Container, Col, Row, CardImg, Card, CardBody, CardText, Button, Input } from 'reactstrap'\r\nimport { action } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { withRouter, Switch, Route, NavLink, Redirect, useHistory } from 'react-router-dom'\r\nimport { set_posts, set_posts_ready, show_create_post, set_search_user, show_search_user } from '../redux/bulletinActions'\r\nimport webAPI from '../webapi'\r\nimport './css/bulletinComponent.css'\r\nimport '../common/DateFormat'\r\nimport Immutable from 'immutable'\r\nimport ProfileComponent from './profileComponent'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.bulletin.posts.toJS(),\r\n        randomPosts: state.bulletin.randomPosts,\r\n        searchUsers: state.bulletin.searchUsers,\r\n        showCreatePost: state.bulletin.showCreatePost, //好像沒用?\r\n        showSearchUsers: state.bulletin.showSearchUsers,\r\n        postsReady: state.bulletin.postsReady,\r\n        profile: state.app.profile.toJS(),\r\n        otherProfile: state.bulletin.otherProfile,\r\n        otherPosts: state.bulletin.otherPosts.toJS()\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchPost: () => { webAPI.fetchPosts(dispatch) },\r\n        fetchUserPost: (userAccount) => { webAPI.fetchUserPost(dispatch, userAccount) },\r\n        fetchRandomPost: () => { webAPI.fetchRandomPosts(dispatch) },\r\n        fetchUsers: (userPrefix) => { webAPI.fetchUsers(dispatch, userPrefix) },\r\n        login: () => { webAPI.login(dispatch, '123', '123123') },\r\n        deletePost: (postId) => { webAPI.deletePost(dispatch, postId) },\r\n        editPost: (postId, postContent, postImg) => { webAPI.editPost(dispatch, postId, postContent, postImg) },\r\n        fetchProfile: (profileId, callBack) => { webAPI.fetchProfile(dispatch, profileId, callBack) },\r\n        editProfile: (profile) => { webAPI.editProfile(dispatch, profile) },\r\n        \r\n    }\r\n}\r\n\r\n\r\nclass BulletinComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.renderPost = this.renderPost.bind(this)\r\n        this.renderPosts = this.renderPosts.bind(this)\r\n        this.renderPostsPage = this.renderPostsPage.bind(this)\r\n        this.renderCreatePost = this.renderCreatePost.bind(this)\r\n        this.renderHeader = this.renderHeader.bind(this)\r\n        this.renderProfile = this.renderProfile.bind(this)\r\n\r\n        this.createPostTextareaRef = React.createRef()\r\n        this.uploadImgRef = React.createRef()\r\n\r\n        this.nowDate = new Date()\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            imgToUploadName: '',\r\n            fetchingProfile: false\r\n        }\r\n\r\n        ///////////////////////////////\r\n        // NEEEEEEED to DELETE  ///////\r\n        ///////////////////////////////\r\n        // only for test\r\n        this.props.login()\r\n\r\n        console.log('constructor')\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        console.log('will mount')\r\n        this.props.fetchPost()\r\n        this.props.fetchRandomPost()\r\n\r\n\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div className='postLoading'>\r\n                <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                <b style={{ color: 'white', WebkitTextStroke: '1px black' }}> Posts Now Loading... </b>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPost(post) {\r\n\r\n        //console.log(post)\r\n        let postCardRef = React.createRef()\r\n\r\n\r\n        let deletePost = () => {\r\n            //console.log('delete'+ post._id)\r\n            //postCardRef.current.style.opacity = 0\r\n            postCardRef.current.classList.add('disappearing')\r\n            this.props.deletePost(post._id)\r\n        }\r\n\r\n        let editPost = () => {\r\n\r\n            let contentEdit = postCardRef.current.querySelector('.contentEdit')\r\n            let submitEdit = postCardRef.current.querySelector('.submitEditBtn')\r\n            let editPost = postCardRef.current.querySelector('.editPostBtn')\r\n            let postCardContent = postCardRef.current.querySelector('.postCardContent')\r\n\r\n            contentEdit.classList.remove('invisible')\r\n            postCardContent.classList.add('invisible')\r\n\r\n            submitEdit.classList.remove('invisible')\r\n            submitEdit.classList.add('order-1')\r\n            editPost.classList.add('order-0')\r\n\r\n            editPost.classList.add('invisible')\r\n\r\n\r\n            contentEdit.value = post.content\r\n        }\r\n\r\n        let submitEdit = () => {\r\n\r\n            let contentEdit = postCardRef.current.querySelector('.contentEdit')\r\n            let submitEdit = postCardRef.current.querySelector('.submitEditBtn')\r\n            let editPost = postCardRef.current.querySelector('.editPostBtn')\r\n            let postCardContent = postCardRef.current.querySelector('.postCardContent')\r\n\r\n\r\n            contentEdit.classList.add('invisible')\r\n            postCardContent.classList.remove('invisible')\r\n\r\n\r\n            editPost.classList.remove('invisible')\r\n            editPost.classList.remove('order-0')\r\n\r\n            submitEdit.classList.remove('order-1')\r\n            submitEdit.classList.add('invisible')\r\n\r\n            this.props.editPost(post._id, contentEdit.value, post.image)\r\n\r\n        }\r\n\r\n        return (\r\n            <div ref={postCardRef} key={post._id} >\r\n                <div className='postInterval' />\r\n                <div className='container postCard'>\r\n                    <div className='row' style={{ marginTop: '10px' }}>\r\n                        <div className='col-1'>\r\n                            <img src='/assets/yoo.png' className='postCardImg' />\r\n                        </div>\r\n                        <div className='col-5 offset-1'>\r\n                            <div className='postCardUser'>\r\n                                <b >{post.alias + '@' + post.user}</b>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4 ml-auto\">\r\n                            <div className='postCardDate'>\r\n                                {post.date.format(\"yyyy-MM-dd hh:mm:ss\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr className='separateLine' />\r\n                    <div className='row'>\r\n                        <div className='postCardMain col-10 offset-1'>\r\n\r\n                            <div className='postCardContent'>\r\n\r\n                                {post.content}\r\n\r\n                            </div>\r\n\r\n                            <textarea className='invisible contentEdit' name='createPost' id='createPost'>\r\n\r\n                            </textarea>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row justify-content-end'>\r\n                        {\r\n                            this.props.profile.user === post.user ?\r\n                                <>\r\n                                    <Button onClick={submitEdit} className='invisible submitEditBtn functionBtn' color='primary'> <i className=\"fa fa-upload\" /> </Button>\r\n                                    <Button onClick={editPost} className='editPostBtn functionBtn' color='primary'> <i className=\"fa fa-edit\" /> </Button>\r\n                                    <Button onClick={deletePost} className='order-3 functionBtn' color='primary'> <i className=\"fa fa-times-circle\" /> </Button>\r\n                                </>\r\n                                :\r\n                                null\r\n                        }\r\n                    </div>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPosts() {\r\n\r\n        console.log('posts')\r\n        console.log(this.props.location.pathname)\r\n\r\n        if (this.props.postsReady) {\r\n\r\n            if (this.props.location.pathname === '/bulletin/explore') {\r\n                return (\r\n                    <div >\r\n                        {\r\n                            this.props.randomPosts.map((item) => {\r\n                                return this.renderPost(item)\r\n                            })\r\n                        }\r\n                        <div className='postInterval' />\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div >\r\n                        {\r\n                            this.props.posts.map((item) => {\r\n                                return this.renderPost(item)\r\n                            })\r\n                        }\r\n                        <div className='postInterval' />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return this.renderLoading()\r\n        }\r\n    }\r\n\r\n    renderPostsPage() {\r\n        let posts = this.renderPosts()\r\n        let header = this.renderHeader()\r\n\r\n        return (\r\n            <div style={{ maxWidth: '100%' }}>\r\n                {header}\r\n                <div className='postContainer'>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderCreatePost() {\r\n\r\n        let clearText = () => {\r\n            this.createPostTextareaRef.current.value = ''\r\n        }\r\n\r\n        let uploadImg = () => {\r\n            console.log(this.uploadImgRef.current.files[0])\r\n            this.setState(\r\n                {\r\n                    ...this.state,\r\n                    imgToUploadName: this.uploadImgRef.current.files[0].name + ' is ready!'\r\n                }\r\n            )\r\n        }\r\n\r\n        let submitPost = () => {\r\n\r\n        }\r\n\r\n        let header = this.renderHeader()\r\n\r\n        if (this.props.profile === null) {\r\n            return (\r\n                <div>\r\n                    {header}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {header}\r\n                <div className='postContainer' style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                    <div className='container'>\r\n                        <div className='container postCard'>\r\n                            <div className='row' style={{ marginTop: '10px' }}>\r\n                                <div className='col-1'>\r\n                                    <img src='/assets/yoo.png' className='postCardImg' />\r\n                                </div>\r\n                                <div className='col-7 offset-1'>\r\n                                    <div className='postCardUser'>\r\n                                        <b >{this.props.profile.alias} , &nbsp;Try to post something!</b>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3 ml-auto\">\r\n                                    <div className='postCardDate' style={{ textAlign: 'center' }}>\r\n                                        {this.nowDate.toLocaleDateString()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className='separateLine' />\r\n                            <div className='row'>\r\n                                <div className='col-10 offset-1'>\r\n                                    <textarea ref={this.createPostTextareaRef} className='contentEdit' name='createPost' id='createPost'>\r\n                                    </textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row' >\r\n                                <div className='col-10 offset-1' style={{ marginBottom: '10px', display: 'flex', justifyContent: 'flex-end' }}>\r\n\r\n                                    <p style={{ margin: 'auto 0' }}> {this.state.imgToUploadName} </p>\r\n                                    <input ref={this.uploadImgRef} type=\"file\" id=\"uploadImg\" accept=\"image/*\" style={{ display: 'none' }} onChange={() => { uploadImg() }} />\r\n\r\n                                    <Button onClick={() => { this.uploadImgRef.current.click() }} color='primary' style={{ marginRight: '5px' }}>\r\n                                        +Image\r\n                                    </Button>\r\n                                    <Button onClick={clearText} color='primary' style={{ marginRight: '5px' }}>Clear</Button>\r\n                                    <Button color='success'>Submit</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderHeader() {\r\n\r\n        let searchUserRef = React.createRef()\r\n\r\n        let fetchSearchResult = (prefix) => {\r\n\r\n            this.props.fetchUsers(prefix)\r\n\r\n        }\r\n\r\n        let searchOnFocus = (prefix) => {\r\n            this.props.fetchUsers(prefix)\r\n\r\n            let query = this.isMobile? '.searchResultMobile' : '.searchResult'\r\n            let searchResultDiv = searchUserRef.current.querySelector(query)\r\n            searchResultDiv.classList.remove('invisible')\r\n\r\n        }\r\n\r\n        let searchOnBlur = () => {\r\n            let query = this.isMobile? '.searchResultMobile' : '.searchResult'\r\n            let searchResultDiv = searchUserRef.current.querySelector(query)\r\n\r\n            setTimeout(() => { searchResultDiv.classList.add('invisible') }, 100)\r\n            //searchResultDiv.classList.add('invisible')\r\n        }\r\n\r\n        let linkToProfile = (profile) => {\r\n            console.log('link')\r\n            console.log(profile.user)\r\n\r\n            this.props.history.replace((`${this.props.match.path}/profile/` + profile.user))\r\n            //this.props.history.go()\r\n\r\n        }\r\n\r\n        if (this.isMobile) {\r\n            return (\r\n                <div className='bulletinHeaderMobile'>\r\n                    <div ref={searchUserRef} className='searchUserMobile'>\r\n\r\n                        <div className='searchResultMobile invisible'>\r\n                            {\r\n                                this.props.searchUsers.map(\r\n                                    (item) => {\r\n                                        return (\r\n                                            <div onClick={() => { linkToProfile(item) }} key={item.user} className='searchEntry'>\r\n                                                <span><img src={item.image} className='searchUserImg' /></span>\r\n                                                { item.alias + '@' + item.user}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <input onBlur={searchOnBlur} onFocus={(e) => { searchOnFocus(e.target.value) }} onChange={(e) => { fetchSearchResult(e.target.value) }} className='searchBarMobile' type='text' placeholder='search other user by account'>\r\n                        </input>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div className='bulletinHeader' style={{ display: 'flex' }}>\r\n\r\n                    <span style={{ flexBasis: '1vw' }} />\r\n\r\n                    <img className='userImg' src={this.props.profile ? this.props.profile.profileImage : \"/assets/yoo.png\"} />\r\n                    <span /> <b style={{ overflowX: 'hidden', minWidth: '5vw', maxWidth: '10vw', textAlign: 'center' }}>{this.props.profile ? this.props.profile.alias : \"Guest\"} </b><span />\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/create`}><button className='newPostButton btn' ><span className=\"fa fa-plus-square fa-fw\" /><span className='textself'>  &nbsp;New Post&nbsp;  </span></button></NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/`}>\r\n                        <button className='randomPostButton btn'><span className=\"fa fa-stack-overflow fa-fw\" /> <span className='textself'>&nbsp;My Bulletin&nbsp; </span> </button>\r\n                    </NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/explore`}>\r\n                        <button className='randomPostButton btn'><span className=\"fa fa-globe fa-fw\" /><span className='textself'> &nbsp;Explore&nbsp; </span></button>\r\n                    </NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <div ref={searchUserRef} className='searchUser'>\r\n\r\n                        <div className='searchResult invisible'>\r\n                            {\r\n                                this.props.searchUsers.map(\r\n                                    (item) => {\r\n                                        return (\r\n                                            <div onClick={() => { linkToProfile(item) }} key={item.user} className='searchEntry'>\r\n                                                <span><img src={item.image} className='searchUserImg' /></span>\r\n                                                { item.alias + '@' + item.user}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <input onBlur={searchOnBlur} onFocus={(e) => { searchOnFocus(e.target.value) }} onChange={(e) => { fetchSearchResult(e.target.value) }} className='searchBar' type='text' placeholder='search other user by account'>\r\n                        </input>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderProfile({ match }) {\r\n\r\n        let header = this.renderHeader()\r\n        console.log('params')\r\n        console.log(match.params)\r\n\r\n        let userId = match.params.profileId\r\n\r\n        if (userId === undefined && this.props.profile !== null) {\r\n            userId = this.props.profile.user\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {header}\r\n                {  (userId === undefined || this.props.profile === null) ?\r\n                    <div />\r\n                    :\r\n                    <ProfileComponent editProfile={this.props.editProfile} renderPost={this.renderPost}\r\n                        myId={this.props.profile.user} posts={this.props.otherPosts}\r\n                        profileId={userId} fetchProfile={this.props.fetchProfile}\r\n                        profile={userId === this.props.profile.user ? this.props.profile : this.props.otherProfile}\r\n                        myProfile={this.props.profile}\r\n                        fetchUserPost={this.props.fetchUserPost} \r\n                        />\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        this.isMobile = window.screen.width < window.screen.height\r\n\r\n        console.log('renderrr')\r\n        return (\r\n            <div>\r\n                <Route exact path={`${this.props.match.path}/`} component={this.renderPostsPage} />\r\n                <Route exact path={`${this.props.match.path}/explore`} component={this.renderPostsPage} />\r\n                <Route exact path={`${this.props.match.path}/create`} component={this.renderCreatePost} />\r\n                <Route exact path={`${this.props.match.path}/profile`} component={this.renderProfile} />\r\n                <Route path={`${this.props.match.path}/profile/:profileId`} component={this.renderProfile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(BulletinComponent))","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\common\\DateFormat.js",["171","172","173","174","175","176","177","178","179","180","181","182"],"// 對Date的擴充套件，將 Date 轉化為指定格式的String\r\n// 月(M)、日(d)、小時(h)、分(m)、秒(s)、季度(q) 可以用 1-2 個佔位符，\r\n// 年(y)可以用 1-4 個佔位符，毫秒(S)只能用 1 個佔位符(是 1-3 位的數字)\r\n// 例子：\r\n// (new Date()).format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423\r\n// (new Date()).format(\"yyyy-M-d hⓂ️s.S\")   ==> 2006-7-2 8:9:4.18\r\nDate.prototype.format = function (fmt) {\r\n    var o = {\r\n      \"M+\": this.getMonth() + 1, //月份\r\n      \"d+\": this.getDate(), //日\r\n      \"h+\": this.getHours(), //小時\r\n      \"m+\": this.getMinutes(), //分\r\n      \"s+\": this.getSeconds(), //秒\r\n      \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n      \"S\": this.getMilliseconds() //毫秒\r\n    };\r\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (var k in o)\r\n    if (new RegExp(\"(\" +  k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" +  o[k]).substr((\"\" + o[k]).length)));\r\n    return fmt;\r\n  }\r\n  \r\n  Date.prototype.addSeconds = function(seconds) {\r\n    this.setSeconds(this.getSeconds() + seconds);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addMinutes = function(minutes) {\r\n    this.setMinutes(this.getMinutes() + minutes);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addHours = function(hours) {\r\n    this.setHours(this.getHours() + hours);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addDays = function(days) {\r\n    this.setDate(this.getDate() + days);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addMonths = function(months) {\r\n    this.setMonth(this.getMonth() + months);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addYears = function(years) {\r\n    this.setFullYear(this.getFullYear() + years);\r\n    return this;\r\n  }\r\n  \r\n  function diffSeconds(milliseconds) {\r\n    return Math.floor(milliseconds / 1000);\r\n  }\r\n  \r\n  function diffMinutes(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60);\r\n  }\r\n  \r\n  function diffHours(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60 / 60);\r\n  }\r\n  \r\n  function diffDays(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60 / 60 / 24);\r\n  }\r\n  ","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\profileComponent.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import { Component, createElement } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport { Container, Col, Row, CardImg, Card, CardBody, CardText, Button, Input } from 'reactstrap'\r\nimport { action } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { withRouter, Switch, Route, NavLink, Redirect } from 'react-router-dom'\r\nimport webAPI from '../webapi'\r\nimport './css/profileComponent.css'\r\nimport './css/bulletinComponent.css'\r\nimport '../common/DateFormat'\r\nimport Immutable from 'immutable'\r\n\r\n\r\nclass ProfileComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            profileReady: false,\r\n            editingAlias: false,\r\n            editingIntro: false,\r\n            editingImage: false,\r\n            onFollow: false\r\n        }\r\n\r\n        //this.renderProfilePost = this.renderProfilePost.bind(this)\r\n        this.renderProfilePosts = this.renderProfilePosts.bind(this)\r\n        this.renderLoading = this.renderLoading.bind(this)\r\n        //this.renderFollowButton = this.renderFollowButton.bind(this)\r\n\r\n        this.profileCardRef = React.createRef()\r\n        this.uploadProfileImageRef = React.createRef()\r\n\r\n        this.renderProfilePost = this.props.renderPost.bind(this)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        if (this.props.profile === null || (this.props.profileId !== this.props.profile.user)) {\r\n            this.setState({ profileReady: false })\r\n            this.props.fetchProfile(this.props.profileId, this)\r\n        }\r\n        else {\r\n            this.setState({ profileReady: true })\r\n        }\r\n        this.props.fetchUserPost(this.props.profileId)\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div className='postLoading' style={{ marginTop: '10vh' }}>\r\n                <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                <b style={{ color: 'white', WebkitTextStroke: '1px black' }}> Posts Now Loading... </b>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderProfilePosts() {\r\n        if (this.props.posts.length !== 0) {\r\n            return (\r\n                <div style={{ marginTop: '10vh' }}>\r\n                    {\r\n                        this.props.posts.map((item) => {\r\n                            return this.renderProfilePost(item)\r\n                        })\r\n                    }\r\n                    <div className='postInterval' />\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n            return this.renderLoading()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log('profile render!')\r\n        console.log(this.props.profile)\r\n        console.log(this.state)\r\n\r\n        let posts = this.renderProfilePosts()\r\n        let FollowButton\r\n        let editAlias = () => {\r\n\r\n            let aliasTextarea = this.profileCardRef.current.querySelector('.aliasTextarea')\r\n            aliasTextarea.value = this.props.profile.alias\r\n            aliasTextarea.classList.remove('invisible')\r\n            aliasTextarea.focus()\r\n\r\n            this.setState({ editingAlias: true })\r\n\r\n        }\r\n\r\n        let editIntro = () => {\r\n            let introTextarea = this.profileCardRef.current.querySelector('.introTextarea')\r\n            introTextarea.value = this.props.profile.intro\r\n            introTextarea.classList.remove('invisible')\r\n            introTextarea.focus()\r\n\r\n            this.setState({ editingIntro: true })\r\n        }\r\n\r\n        let editProfileImage = () => {\r\n            this.uploadProfileImageRef.current.click()\r\n        }\r\n\r\n        let uploadProfileImage = () => {\r\n            console.log(this.uploadProfileImageRef.current.files[0])\r\n            this.props.editProfile({ profileImage: '/assets/' + this.uploadProfileImageRef.current.files[0].name })\r\n        }\r\n\r\n        let onEditAliasBlur = () => {\r\n\r\n            console.log('on alias blur')\r\n\r\n            this.setState({\r\n                editingAlias: false,\r\n            })\r\n            let aliasTextarea = this.profileCardRef.current.querySelector('.aliasTextarea')\r\n            aliasTextarea.classList.add('invisible')\r\n\r\n            if (aliasTextarea.value !== this.props.profile.alias) {\r\n                //////////////////////************************* */\r\n                // remember to re-fetch posts, in order to refresh name & image on posts card\r\n                /////////////////////************************** */\r\n                this.props.editProfile({ alias: aliasTextarea.value })\r\n            }\r\n\r\n        }\r\n\r\n        let onEditIntroBlur = () => {\r\n            console.log('on intro blur')\r\n\r\n            this.setState({\r\n                editingIntro: false,\r\n            })\r\n\r\n            let introTextarea = this.profileCardRef.current.querySelector('.introTextarea')\r\n            introTextarea.classList.add('invisible')\r\n\r\n            if (introTextarea.value !== this.props.profile.intro) {\r\n                //////////////////////************************* */\r\n                // remember to re-fetch posts, in order to refresh name & image on posts card\r\n                /////////////////////************************** */\r\n                this.props.editProfile({ intro: introTextarea.value })\r\n            }\r\n        }\r\n\r\n\r\n        let onClickFollow = () => {\r\n            this.setState({ onFollow: true })\r\n            setTimeout(() => { this.setState({ onFollow: false }) }, 2000)\r\n        }\r\n\r\n        let onClickUnfollow = () => {\r\n            this.setState({ onFollow: true })\r\n            setTimeout(() => { this.setState({ onFollow: false }) }, 2000)\r\n        }\r\n\r\n\r\n\r\n\r\n        if (this.state.profileReady && this.props.profile !== null) {\r\n\r\n            if (this.props.myProfile.followees.indexOf(this.props.profile.user) !== -1) {\r\n                FollowButton = () => {\r\n                    return (\r\n                        <Button onClick={onClickUnfollow} className='followButton' color='primary'>\r\n                            {this.state.onFollow ?\r\n                                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-lg fa-fw text-warning\"></span>\r\n                                    :\r\n                                    'Unfollow'\r\n                            }</Button>)}}\r\n            else {\r\n                FollowButton = () => {\r\n                    return (\r\n                        <Button onClick={onClickFollow} className='followButton' color='primary'>\r\n                            {this.state.onFollow ?\r\n                                <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-lg fa-fw text-warning\"></span>\r\n                                :\r\n                                'Follow'}\r\n                        </Button>\r\n                    )\r\n                }\r\n            }\r\n\r\n\r\n            return (\r\n                <div className='postContainer' style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                    <div className='container'>\r\n                        <div ref={this.profileCardRef} className='profileCard'>\r\n\r\n                            <div style={{ position: 'relative', marginLeft: '10px', display: 'flex', alignItems: 'center' }}>\r\n                                <div className='leftColumn' >\r\n                                    <input ref={this.uploadProfileImageRef} type=\"file\" id=\"uploadProfileImg\" accept=\"image/*\" style={{ display: 'none' }} onChange={() => { uploadProfileImage() }} />\r\n                                    <img className='profileCardImg' src={this.props.profile.profileImage} />\r\n                                    {\r\n                                        this.props.myId === this.props.profile.user ?\r\n                                            <Button onClick={editProfileImage} className='editImg ' color='primary'> <i className=\"fa fa-edit\" /> </Button>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='textBlock'>\r\n                                <div className='profileAlias'>\r\n                                    {\r\n                                        <>\r\n                                            <textarea rows='1' onBlurCapture={onEditAliasBlur} className='invisible aliasTextarea' />\r\n                                            {this.state.editingAlias ? null : this.props.profile.alias}\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        (this.props.myId === this.props.profile.user && !this.state.editingAlias) ?\r\n                                            <Button onClick={editAlias} className='editAlias ' color='primary'> <i className=\"fa fa-edit\" /> </Button>\r\n                                            :\r\n                                            <FollowButton />\r\n                                    }\r\n                                </div>\r\n                                <hr />\r\n                                <div className='profileDescription'>\r\n                                    {<>\r\n                                        <textarea onBlurCapture={onEditIntroBlur} className='invisible introTextarea' />\r\n                                        {this.state.editingIntro ? null : this.props.profile.intro}\r\n                                    </>\r\n                                    }\r\n                                    {\r\n                                        (this.props.myId === this.props.profile.user && !this.state.editingIntro) ?\r\n                                            <Button onClick={editIntro} className='editDescription ' color='primary'> <i className=\"fa fa-edit\" /> </Button>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n\r\n                        {posts}\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='postLoading'>\r\n                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                    <b style={{ color: 'white', WebkitTextStroke: '1px black' }}> Posts Now Loading... </b>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProfileComponent","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bottomComponent.js",["204","205","206"],"import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './css/bottomComponent.css'\r\n\r\n\r\n\r\n\r\n\r\nconst NavPanel = ({ setPopout, isPopped, isAuthed , userAlias , logout}) => {\r\n\r\n    let isPoppedOut = isPopped? ' poppedOut' : ''\r\n\r\n    console.log(isPoppedOut)\r\n\r\n    if (isAuthed) {\r\n        return(\r\n        <div className={'popoutPanel' + isPoppedOut}>\r\n            <div style={{ fontSize: '18px' }}>\r\n                    <b>\r\n                        {\"HELLLLO \" + userAlias}\r\n                    </b>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;BULLETIN\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/profile' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;PROFILE\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/logout' className='navlink' activeClassName='activeSide' onClick={logout}>\r\n                        <span className=\"fa fa-user-alt-slash\" /> &nbsp;LOGOUT\r\n                </NavLink>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className={'popoutPanel' + isPoppedOut}>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/login' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa fa-user-circle\" /> &nbsp;LOGIN\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FunctionPanel = ({ setPopout, isPopped }) => {\r\n\r\n    let isPoppedOut = isPopped? ' poppedOut' : ''\r\n\r\n    return(\r\n        <div className={'popoutPanel' + isPoppedOut}>\r\n            \r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/create' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;New Post\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;My Bulletin\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/explore' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;Explore\r\n                </NavLink>\r\n                </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst BottomComponent = ({ profile , isAuthed, userAlias, logout }) => {\r\n\r\n    const [ popoutNav , setPopoutNav ] = React.useState(false)\r\n    const [ popoutFunc , setPopoutFunc ] = React.useState(false)\r\n\r\n\r\n    if (isAuthed) {\r\n        return (\r\n            <div className='bottomPanel'>\r\n                \r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutFunc(!popoutFunc)\r\n                        setPopoutNav(false)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-bars'></i>\r\n                </div>\r\n\r\n                    {\r\n                        profile===null?\r\n                        null\r\n                        :\r\n                        <div className='bottomUserBlock'>\r\n                            <img className='bottomProfileImage' src={profile.profileImage}/>\r\n                            <h6>{profile.alias}</h6>\r\n                        </div>\r\n                    }\r\n\r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutNav(!popoutNav)\r\n                        setPopoutFunc(false)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-compass'></i>\r\n                </div>\r\n                \r\n                <FunctionPanel setPopout={setPopoutFunc} isPopped={popoutFunc} />\r\n                <NavPanel setPopout={setPopoutNav} isPopped={popoutNav} isAuthed={isAuthed} userAlias={userAlias} logout={logout}/>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div className='bottomPanel'>\r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutNav(!popoutNav)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-compass'></i>\r\n                </div>\r\n                <NavPanel setPopout={setPopoutNav} isPopped={popoutNav} isAuthed={isAuthed} userAlias={userAlias} logout={logout}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default BottomComponent",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":12},{"ruleId":"211","severity":1,"message":"215","line":3,"column":17,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"216","line":11,"column":25,"nodeType":"213","messageId":"214","endLine":11,"endColumn":35},{"ruleId":"211","severity":1,"message":"217","line":12,"column":15,"nodeType":"213","messageId":"214","endLine":12,"endColumn":18},{"ruleId":"211","severity":1,"message":"218","line":31,"column":7,"nodeType":"213","messageId":"214","endLine":31,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":38,"column":5,"nodeType":"221","endLine":38,"endColumn":7,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"216","line":2,"column":19,"nodeType":"213","messageId":"214","endLine":2,"endColumn":29},{"ruleId":"211","severity":1,"message":"223","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":43},{"ruleId":"211","severity":1,"message":"224","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":19},{"ruleId":"211","severity":1,"message":"225","line":3,"column":31,"nodeType":"213","messageId":"214","endLine":3,"endColumn":38},{"ruleId":"211","severity":1,"message":"226","line":3,"column":40,"nodeType":"213","messageId":"214","endLine":3,"endColumn":44},{"ruleId":"211","severity":1,"message":"227","line":3,"column":46,"nodeType":"213","messageId":"214","endLine":3,"endColumn":54},{"ruleId":"211","severity":1,"message":"228","line":3,"column":56,"nodeType":"213","messageId":"214","endLine":3,"endColumn":64},{"ruleId":"211","severity":1,"message":"229","line":3,"column":66,"nodeType":"213","messageId":"214","endLine":3,"endColumn":72},{"ruleId":"211","severity":1,"message":"230","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"231","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"232","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":24},{"ruleId":"211","severity":1,"message":"233","line":8,"column":26,"nodeType":"213","messageId":"214","endLine":8,"endColumn":34},{"ruleId":"234","severity":1,"message":"235","line":109,"column":25,"nodeType":"236","endLine":109,"endColumn":53},{"ruleId":"211","severity":1,"message":"237","line":2,"column":9,"nodeType":"213","messageId":"214","endLine":2,"endColumn":22},{"ruleId":"211","severity":1,"message":"238","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":24},{"ruleId":"211","severity":1,"message":"239","line":6,"column":150,"nodeType":"213","messageId":"214","endLine":6,"endColumn":166},{"ruleId":"211","severity":1,"message":"240","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":30},{"ruleId":"211","severity":1,"message":"218","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":12},{"ruleId":"241","severity":1,"message":"242","line":13,"column":1,"nodeType":"243","endLine":769,"endColumn":2},{"ruleId":"211","severity":1,"message":"244","line":94,"column":13,"nodeType":"213","messageId":"214","endLine":94,"endColumn":16},{"ruleId":"211","severity":1,"message":"245","line":95,"column":13,"nodeType":"213","messageId":"214","endLine":95,"endColumn":22},{"ruleId":"211","severity":1,"message":"245","line":219,"column":13,"nodeType":"213","messageId":"214","endLine":219,"endColumn":22},{"ruleId":"211","severity":1,"message":"246","line":384,"column":13,"nodeType":"213","messageId":"214","endLine":384,"endColumn":22},{"ruleId":"211","severity":1,"message":"247","line":438,"column":13,"nodeType":"213","messageId":"214","endLine":438,"endColumn":23},{"ruleId":"248","severity":1,"message":"249","line":438,"column":26,"nodeType":"213","messageId":"250","endLine":438,"endColumn":31},{"ruleId":"211","severity":1,"message":"251","line":693,"column":25,"nodeType":"213","messageId":"214","endLine":693,"endColumn":33},{"ruleId":"211","severity":1,"message":"223","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":43},{"ruleId":"211","severity":1,"message":"225","line":4,"column":26,"nodeType":"213","messageId":"214","endLine":4,"endColumn":33},{"ruleId":"211","severity":1,"message":"227","line":4,"column":41,"nodeType":"213","messageId":"214","endLine":4,"endColumn":49},{"ruleId":"211","severity":1,"message":"228","line":4,"column":51,"nodeType":"213","messageId":"214","endLine":4,"endColumn":59},{"ruleId":"211","severity":1,"message":"252","line":5,"column":43,"nodeType":"213","messageId":"214","endLine":5,"endColumn":52},{"ruleId":"211","severity":1,"message":"231","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":16},{"ruleId":"211","severity":1,"message":"253","line":10,"column":28,"nodeType":"213","messageId":"214","endLine":10,"endColumn":47},{"ruleId":"211","severity":1,"message":"254","line":10,"column":49,"nodeType":"213","messageId":"214","endLine":10,"endColumn":57},{"ruleId":"211","severity":1,"message":"255","line":10,"column":59,"nodeType":"213","messageId":"214","endLine":10,"endColumn":69},{"ruleId":"211","severity":1,"message":"216","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"211","severity":1,"message":"256","line":11,"column":22,"nodeType":"213","messageId":"214","endLine":11,"endColumn":29},{"ruleId":"257","severity":1,"message":"258","line":205,"column":41,"nodeType":"236","endLine":205,"endColumn":98},{"ruleId":"211","severity":1,"message":"237","line":3,"column":9,"nodeType":"213","messageId":"214","endLine":3,"endColumn":22},{"ruleId":"211","severity":1,"message":"237","line":2,"column":9,"nodeType":"213","messageId":"214","endLine":2,"endColumn":22},{"ruleId":"211","severity":1,"message":"259","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"211","severity":1,"message":"223","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":43},{"ruleId":"211","severity":1,"message":"224","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":19},{"ruleId":"211","severity":1,"message":"260","line":3,"column":21,"nodeType":"213","messageId":"214","endLine":3,"endColumn":24},{"ruleId":"211","severity":1,"message":"217","line":3,"column":26,"nodeType":"213","messageId":"214","endLine":3,"endColumn":29},{"ruleId":"211","severity":1,"message":"225","line":3,"column":31,"nodeType":"213","messageId":"214","endLine":3,"endColumn":38},{"ruleId":"211","severity":1,"message":"226","line":3,"column":40,"nodeType":"213","messageId":"214","endLine":3,"endColumn":44},{"ruleId":"211","severity":1,"message":"227","line":3,"column":46,"nodeType":"213","messageId":"214","endLine":3,"endColumn":54},{"ruleId":"211","severity":1,"message":"228","line":3,"column":56,"nodeType":"213","messageId":"214","endLine":3,"endColumn":64},{"ruleId":"211","severity":1,"message":"261","line":3,"column":74,"nodeType":"213","messageId":"214","endLine":3,"endColumn":79},{"ruleId":"211","severity":1,"message":"230","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"231","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"262","line":8,"column":22,"nodeType":"213","messageId":"214","endLine":8,"endColumn":28},{"ruleId":"211","severity":1,"message":"263","line":8,"column":46,"nodeType":"213","messageId":"214","endLine":8,"endColumn":54},{"ruleId":"211","severity":1,"message":"264","line":8,"column":56,"nodeType":"213","messageId":"214","endLine":8,"endColumn":66},{"ruleId":"211","severity":1,"message":"265","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":19},{"ruleId":"211","severity":1,"message":"266","line":9,"column":21,"nodeType":"213","messageId":"214","endLine":9,"endColumn":36},{"ruleId":"211","severity":1,"message":"239","line":9,"column":38,"nodeType":"213","messageId":"214","endLine":9,"endColumn":54},{"ruleId":"211","severity":1,"message":"267","line":9,"column":56,"nodeType":"213","messageId":"214","endLine":9,"endColumn":71},{"ruleId":"211","severity":1,"message":"268","line":9,"column":73,"nodeType":"213","messageId":"214","endLine":9,"endColumn":89},{"ruleId":"211","severity":1,"message":"269","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":166,"column":29,"nodeType":"236","endLine":166,"endColumn":82},{"ruleId":"211","severity":1,"message":"270","line":283,"column":13,"nodeType":"213","messageId":"214","endLine":283,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":304,"column":37,"nodeType":"236","endLine":304,"endColumn":90},{"ruleId":"234","severity":1,"message":"235","line":391,"column":55,"nodeType":"236","endLine":391,"endColumn":105},{"ruleId":"234","severity":1,"message":"235","line":414,"column":21,"nodeType":"236","endLine":414,"endColumn":127},{"ruleId":"234","severity":1,"message":"235","line":439,"column":55,"nodeType":"236","endLine":439,"endColumn":105},{"ruleId":"271","severity":1,"message":"272","line":7,"column":1,"nodeType":"273","messageId":"274","endLine":21,"endColumn":4},{"ruleId":"275","severity":1,"message":"276","line":19,"column":94,"nodeType":"277","messageId":"274","endLine":19,"endColumn":96},{"ruleId":"271","severity":1,"message":"272","line":23,"column":3,"nodeType":"273","messageId":"274","endLine":26,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":28,"column":3,"nodeType":"273","messageId":"274","endLine":31,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":33,"column":3,"nodeType":"273","messageId":"274","endLine":36,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":38,"column":3,"nodeType":"273","messageId":"274","endLine":41,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":43,"column":3,"nodeType":"273","messageId":"274","endLine":46,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":48,"column":3,"nodeType":"273","messageId":"274","endLine":51,"endColumn":4},{"ruleId":"211","severity":1,"message":"278","line":53,"column":12,"nodeType":"213","messageId":"214","endLine":53,"endColumn":23},{"ruleId":"211","severity":1,"message":"279","line":57,"column":12,"nodeType":"213","messageId":"214","endLine":57,"endColumn":23},{"ruleId":"211","severity":1,"message":"280","line":61,"column":12,"nodeType":"213","messageId":"214","endLine":61,"endColumn":21},{"ruleId":"211","severity":1,"message":"281","line":65,"column":12,"nodeType":"213","messageId":"214","endLine":65,"endColumn":20},{"ruleId":"211","severity":1,"message":"259","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"211","severity":1,"message":"223","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":43},{"ruleId":"211","severity":1,"message":"224","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":19},{"ruleId":"211","severity":1,"message":"260","line":3,"column":21,"nodeType":"213","messageId":"214","endLine":3,"endColumn":24},{"ruleId":"211","severity":1,"message":"217","line":3,"column":26,"nodeType":"213","messageId":"214","endLine":3,"endColumn":29},{"ruleId":"211","severity":1,"message":"225","line":3,"column":31,"nodeType":"213","messageId":"214","endLine":3,"endColumn":38},{"ruleId":"211","severity":1,"message":"226","line":3,"column":40,"nodeType":"213","messageId":"214","endLine":3,"endColumn":44},{"ruleId":"211","severity":1,"message":"227","line":3,"column":46,"nodeType":"213","messageId":"214","endLine":3,"endColumn":54},{"ruleId":"211","severity":1,"message":"228","line":3,"column":56,"nodeType":"213","messageId":"214","endLine":3,"endColumn":64},{"ruleId":"211","severity":1,"message":"261","line":3,"column":74,"nodeType":"213","messageId":"214","endLine":3,"endColumn":79},{"ruleId":"211","severity":1,"message":"230","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"282","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":17},{"ruleId":"211","severity":1,"message":"231","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"216","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":20},{"ruleId":"211","severity":1,"message":"262","line":8,"column":22,"nodeType":"213","messageId":"214","endLine":8,"endColumn":28},{"ruleId":"211","severity":1,"message":"283","line":8,"column":30,"nodeType":"213","messageId":"214","endLine":8,"endColumn":35},{"ruleId":"211","severity":1,"message":"256","line":8,"column":37,"nodeType":"213","messageId":"214","endLine":8,"endColumn":44},{"ruleId":"211","severity":1,"message":"263","line":8,"column":46,"nodeType":"213","messageId":"214","endLine":8,"endColumn":54},{"ruleId":"211","severity":1,"message":"284","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":14},{"ruleId":"211","severity":1,"message":"269","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":210,"column":37,"nodeType":"236","endLine":210,"endColumn":109},{"ruleId":"211","severity":1,"message":"216","line":2,"column":19,"nodeType":"213","messageId":"214","endLine":2,"endColumn":29},{"ruleId":"285","severity":1,"message":"286","line":39,"column":125,"nodeType":"287","endLine":39,"endColumn":141},{"ruleId":"234","severity":1,"message":"235","line":115,"column":29,"nodeType":"236","endLine":115,"endColumn":93},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'Row' is defined but never used.","'cookies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginWithSession'. Either include it or remove the dependency array. If 'loginWithSession' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["290"],"'findRenderedDOMComponentWithClass' is defined but never used.","'Container' is defined but never used.","'CardImg' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardText' is defined but never used.","'Button' is defined but never used.","'action' is defined but never used.","'ReactDOM' is defined but never used.","'set_news_ready' is defined but never used.","'set_news' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createActions' is defined but never used.","'browserHistory' is defined but never used.","'show_create_post' is defined but never used.","'createBrowserHistory' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Map' is assigned a value but never used.","'mockPosts' is assigned a value but never used.","'mockUsers' is assigned a value but never used.","'mockUserJS' is assigned a value but never used.","no-use-before-define","'users' was used before it was defined.","usedBeforeDefined","'response' is assigned a value but never used.","'ModalBody' is defined but never used.","'set_login_error_msg' is defined but never used.","'on_login' is defined but never used.","'on_sign_up' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'createElement' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'set_posts' is defined but never used.","'set_posts_ready' is defined but never used.","'set_search_user' is defined but never used.","'show_search_user' is defined but never used.","'Immutable' is defined but never used.","'submitPost' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'diffSeconds' is defined but never used.","'diffMinutes' is defined but never used.","'diffHours' is defined but never used.","'diffDays' is defined but never used.","'connect' is defined but never used.","'Route' is defined but never used.","'webAPI' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},"Update the dependencies array to be: [loginWithSession]",{"range":"293","text":"294"},[1119,1121],"[loginWithSession]"]
[{"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\index.js":"1","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\App.js":"2","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\reportWebVitals.js":"3","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\sideComponent.js":"4","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\mainComponent.js":"5","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainActions.js":"6","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\webapi.js":"7","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\ActionTypes.js":"8","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\createStore.js":"9","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainReducers.js":"10","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\loginComponent.js":"11","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginReducers.js":"12","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginAction.js":"13","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinReducers.js":"14","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinActions.js":"15","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appActions.js":"16","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appReducers.js":"17","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bulletinComponent.js":"18","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\common\\DateFormat.js":"19","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\profileComponent.js":"20","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bottomComponent.js":"21"},{"size":1053,"mtime":1609544343710,"results":"22","hashOfConfig":"23"},{"size":2870,"mtime":1609544919104,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":2282,"mtime":1607700873713,"results":"26","hashOfConfig":"23"},{"size":4749,"mtime":1609292440729,"results":"27","hashOfConfig":"23"},{"size":482,"mtime":1606986715137,"results":"28","hashOfConfig":"23"},{"size":38228,"mtime":1609943461294,"results":"29","hashOfConfig":"23"},{"size":1203,"mtime":1609881033593,"results":"30","hashOfConfig":"23"},{"size":616,"mtime":1607344578764,"results":"31","hashOfConfig":"23"},{"size":755,"mtime":1607016223179,"results":"32","hashOfConfig":"23"},{"size":10561,"mtime":1609347827967,"results":"33","hashOfConfig":"23"},{"size":985,"mtime":1607339232167,"results":"34","hashOfConfig":"23"},{"size":723,"mtime":1607339156403,"results":"35","hashOfConfig":"23"},{"size":4329,"mtime":1609900520802,"results":"36","hashOfConfig":"23"},{"size":1720,"mtime":1609362002685,"results":"37","hashOfConfig":"23"},{"size":696,"mtime":1609888300474,"results":"38","hashOfConfig":"23"},{"size":3397,"mtime":1609944055025,"results":"39","hashOfConfig":"23"},{"size":26872,"mtime":1609942045924,"results":"40","hashOfConfig":"23"},{"size":2236,"mtime":1607380213044,"results":"41","hashOfConfig":"23"},{"size":12409,"mtime":1609943394277,"results":"42","hashOfConfig":"23"},{"size":5723,"mtime":1608081814756,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"9rwoeb",{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\index.js",["98"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport createStore from './redux/createStore'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './common/DateFormat'\nimport { BrowserRouter, withRouter } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory();   \n\nconst store = createStore()\n\n\nReactDOM.render(\n\n  <BrowserRouter >\n\n  <Provider store={store}>\n    <React.StrictMode>\n      <App myHistory={history}/>\n    </React.StrictMode>\n  </Provider>\n\n  </BrowserRouter >\n\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["99","100"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\App.js",["101","102","103","104","105","106","107"],"import logo from './logo.svg';\nimport './App.css';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom'\nimport SideComponent from './components/sideComponent'\nimport MainComponent from './components/mainComponent'\nimport LoginComponent from './components/loginComponent'\nimport BottomComponent from './components/bottomComponent'\nimport BulletinComponent from './components/bulletinComponent'\nimport { connect } from 'react-redux'\nimport webAPI from './webapi'\nimport { BrowserRouter, withRouter } from 'react-router-dom';\nimport { Col, Row } from 'reactstrap'\nimport Cookies from 'universal-cookie';\nimport { useEffect } from 'react';\n\n\n/*\nconst cookies = new Cookies()\n\nif(cookies.get('session-id') !== undefined){\n  this.props.loginWithSession()\n}\n*/\n\nfunction App({ isAuthed, profile, logout, loginWithSession, myHistory }) {\n\n  //isAuthed = true\n  let isMobile = window.screen.width < window.screen.height\n\n  let colStyle = isMobile ? { size: 12, offset: 0 } : { size: 10, offset: 0 }\n\n  let cookies = new Cookies()\n\n  useEffect(() => {\n\n    console.log('session login triggered')\n    loginWithSession()\n\n  }, [])\n\n\n\n  return (\n\n    //<BrowserRouter >\n\n    <div className=\"App\" style={{ position: 'relative', backgroundImage: `url('/assets/bg.jpg')` }} >\n      <div style={{ minHeight: '100vh' }}>\n\n        {\n          !isMobile ?\n            <SideComponent isAuthed={isAuthed} userAlias={profile ? profile.alias : null} logout={logout} />\n            :\n            null\n        }\n        <Col xs={colStyle} style={{ padding: '0px 0px' }}>\n          {\n            isAuthed ?\n              <Switch>\n                <Route exact path='/' component={MainComponent} />\n                <Route path='/bulletin' render={(props) => (\n                  <BulletinComponent {...props} myHistory={myHistory} />\n                )} />\n                <Route path='/explore' component={MainComponent} />\n                <Route path='/profile' component={MainComponent} />\n                <Redirect to='/' />\n              </Switch>\n              :\n              <Switch>\n                <Route exact path='/' component={MainComponent} />\n                <Route path='/login' component={LoginComponent} />\n                <Redirect to='/' />\n              </Switch>\n          }\n        </Col>\n        {\n          isMobile ?\n            <BottomComponent profile={profile} isAuthed={isAuthed} userAlias={profile ? profile.alias : null} logout={logout} />\n            :\n            null\n        }\n      </div>\n    </div>\n    //</BrowserRouter>\n\n  );\n\n}\n\n\nexport default connect(\n  (state) => ({\n    isAuthed: state.app.isLogined,\n    profile: state.app.profile === null ? null : state.app.profile.toJS()\n  }),\n  (dispatch) => (\n    {\n      logout: () => { webAPI.logout(dispatch) },\n      loginWithSession: () => { webAPI.loginWithSession(dispatch) },\n    }\n  )\n)\n  (App);","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\reportWebVitals.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\sideComponent.js",["108"],"import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './css/sideComponent.css'\r\n\r\n\r\nconst sideComponent = ({ isAuthed, userAlias, logout }) => {\r\n\r\n    if (isAuthed) {\r\n        return (\r\n            <div className='sidePanel'>\r\n                <div style={{ fontSize: '18px' }}>\r\n                    <b>\r\n                        {\"HELLLLO \" + userAlias}\r\n                    </b>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;BULLETIN\r\n                </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/bulletin/profile' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;PROFILE\r\n                </NavLink>\r\n                </div>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/logout' className='navlink' activeClassName='activeSide' onClick={logout}>\r\n                        <span className=\"fa fa-user-alt-slash\" /> &nbsp;LOGOUT\r\n                </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='sidePanel'>\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div style={{ height: '2px' }} />\r\n                <div className='sideBlock'>\r\n                    <NavLink to='/login' className='navlink' activeClassName='activeSide'>\r\n                    <span className=\"fa fa-user-circle\" /> &nbsp;LOGIN\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default sideComponent","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\mainComponent.js",["109","110","111","112","113","114","115","116","117","118","119","120"],"import { Component } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport { Container, Col, Row, CardImg, Card, CardBody, CardText, Button } from 'reactstrap'\r\nimport { action } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { set_news_ready, set_news, set_news_index } from '../redux/mainActions'\r\nimport { withRouter } from 'react-router-dom'\r\nimport webAPI from '../webapi'\r\nimport './css/mainComponent.css'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(state.main)\r\n    return {\r\n        newsReady: state.main.newsReady,\r\n        openedIndex: state.main.openedIndex,\r\n        news: state.main.news\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setOpenedIndex: (index) => { dispatch(set_news_index(index)) },\r\n    getNews: () => { webAPI.getNews(dispatch) }\r\n})\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.renderNews = this.renderNews.bind(this)\r\n        this.newsEntry = this.newsEntry.bind(this)\r\n\r\n        this.newsBoardRef = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('yooo')\r\n        console.log(this.props)\r\n        this.props.getNews()\r\n    }\r\n\r\n    newsEntry(index, item) {\r\n        let isOpen = index === this.props.openedIndex\r\n        return (\r\n            <div key={index} onClick={() => this.props.setOpenedIndex(index)}>\r\n                <div style={{ lineHeight: '40px', minHeight: '40px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                    <div className='entryTitle'>\r\n                        <span ><b style={{ float: 'left', fontSize:'10px' , marginLeft:'3px' }}>{new Date(item.modifyDate).toLocaleDateString(\"en-US\")}  </b>\r\n                        <b>{item.title}</b></span>\r\n                        <br />\r\n                        <div className='newsEntry' style={{ transition: 'max-height 0.6s ease-out', maxHeight: isOpen ? '100px' : '0px', fontSize: '15px' }}>\r\n                            {isOpen ? item.content : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    renderNews() {\r\n        console.log(this.props.newsReady)\r\n        if (this.props.newsReady) {\r\n\r\n            return (\r\n\r\n                <div>\r\n                    {\r\n                        this.props.news.map(\r\n                            (item, index) => {\r\n                                return this.newsEntry(index, item)\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ lineHeight: '90px', height: '90px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                    <b> News Now Loading... </b>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let news = this.renderNews()\r\n\r\n        return (\r\n            <div className='container' style={{ color: '#333333' }}>\r\n                <div style={{ height: '10vh' }}></div>\r\n                <Row>\r\n                    <Col sm={{ size: 10 }} md={{ offset: 4, size: 3 }}>\r\n                        <img src='./assets/cat.png'></img>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{ height: '10px' }} />\r\n                <Row>\r\n                    <Col sm={{ size: 12 }} md={{ offset: 3, size: 6 }}>\r\n                        <div style={{\r\n                            overflow: 'auto', maxHeight: '40vh', boxShadow: '10px 5px 10px',\r\n                            border: 'solid 2px', borderColor: `rgba(30,30,30,1.0)`, borderRadius: '5px'\r\n                        }}>\r\n\r\n                            <div style={{ lineHeight: '40px', height: '40px', boxShadow: 'inset 0px 0px 5px ', border: 'solid 0px', borderColor: `rgba(200,120,120,0.7)`, background: `rgba(240,130,80,0.7)`, fontSize: '20px' }}>\r\n                                <b>-----NEWS-----</b>\r\n                            </div>\r\n\r\n                            {news}\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(MainComponent))","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainActions.js",["121"],"import {SET_NEWS_INDEX , SET_NEWS_READY , SET_NEWS} from './ActionTypes'\r\nimport {createActions} from 'redux-actions'\r\n\r\n\r\nexport const set_news_index = (index) => (\r\n    {\r\n        type: SET_NEWS_INDEX,\r\n        payload: index\r\n    }\r\n)\r\nexport const set_news_ready =(ready) =>(\r\n    {\r\n        type: SET_NEWS_READY,\r\n        payload: ready\r\n    }\r\n )// boolean\r\nexport const set_news = (news) =>(\r\n    {\r\n        type: SET_NEWS,\r\n        payload: news\r\n    }\r\n) // array of object","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\webapi.js",["122","123","124","125","126","127","128","129","130","131","132","133","134"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\ActionTypes.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\createStore.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\mainReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\loginComponent.js",["135","136","137","138","139","140","141","142","143","144","145","146"],"import { Component } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport {\r\n    Container, Col, Row, CardImg, Card, CardBody, CardText, Button,\r\n    FormGroup, Form, Input, Label, Modal, ModalBody, ModalHeader\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { set_sign_up_form, set_login_error_msg, on_login, on_sign_up } from '../redux/loginAction'\r\nimport { withRouter, NavLink } from 'react-router-dom'\r\nimport webAPI from '../webapi'\r\nimport './css/mainComponent.css'\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    //console.log('mapstatetoprops')\r\n    console.log(state.login)\r\n\r\n    return {\r\n        loginErrorMsg: state.login.loginErrorMsg,\r\n        signupErrorMsg: state.login.signupErrorMsg,\r\n        signUpForm: state.login.signUpForm,\r\n        onLogin: state.login.onLogin,\r\n        onSignup: state.login.onSignup\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showSignUpForm: (show) => { dispatch(set_sign_up_form(show)) },\r\n        login: (account, password) => { webAPI.login(dispatch, account, password) },\r\n        signup: (account, password) => { webAPI.signup(dispatch, account, password) }\r\n    }\r\n}\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.onLoginClicked = this.onLoginClicked.bind(this)\r\n        this.onSignUpClicked = this.onSignUpClicked.bind(this)\r\n        this.onSubmitSignup = this.onSubmitSignup.bind(this)\r\n        \r\n        \r\n\r\n        this.rememberRef = React.createRef()\r\n\r\n        const cookies = new Cookies()\r\n\r\n        // fill in default account and password\r\n        if ( (cookies.get('myaccount') !== undefined) && (cookies.get('mypassword') !== undefined) ) {\r\n            console.log('cookiee')\r\n            console.log(cookies.get('myaccount') +'  ' +cookies.get('mypassword'))\r\n            this.state = {\r\n                ...this.state,\r\n                loginAccount: cookies.get('myaccount'),\r\n                loginPassword: cookies.get('mypassword'),\r\n                signupAccount: '',\r\n                signupPassword: ''\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                ...this.state,\r\n                loginAccount: '',\r\n                loginPassword: '',\r\n                signupAccount: '',\r\n                signupPassword: ''\r\n            }\r\n        }\r\n      \r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onLoginClicked() {\r\n        console.log('on login up')\r\n        console.log(this.state.loginAccount + '  ' + this.state.loginPassword)\r\n\r\n        \r\n\r\n        const cookies = new Cookies()\r\n        console.log('check  ' + this.rememberRef.current.checked)\r\n\r\n        if (this.rememberRef.current.checked === true) {\r\n            console.log('rem true')\r\n            cookies.set('myaccount', this.state.loginAccount, { path: '/' })\r\n            cookies.set('mypassword', this.state.loginPassword, { path: '/' })\r\n        } else {\r\n            console.log('rem false')\r\n            cookies.remove('myaccount' , { path: '/' })\r\n            cookies.remove('mypassword' , { path: '/' })\r\n        }\r\n\r\n        this.props.login(this.state.loginAccount, this.state.loginPassword)\r\n\r\n\r\n        this.setState({loginAccount:''}) \r\n        this.setState({loginPassword:''}) \r\n    }\r\n\r\n    onSignUpClicked(event) {\r\n        console.log('on sign up')\r\n        event.preventDefault()\r\n        this.props.showSignUpForm(true)\r\n\r\n    }\r\n\r\n    onSubmitSignup() {\r\n        console.log('on submit signup')\r\n        console.log(this.state.signupAccount + '  ' + this.state.signupPassword)\r\n\r\n        this.props.signup(this.state.signupAccount, this.state.signupPassword)\r\n        this.setState({signupAccount:''}) \r\n        this.setState({signupPassword : ''})\r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log('login componenttt')\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Modal isOpen={this.props.signUpForm} toggle={() => { this.props.showSignUpForm(false) }} >\r\n\r\n                        <Card style={{ background: `rgba(237,115,45, 0.7)` }}>\r\n                            <ModalHeader style={{ margin: 'auto' }} > <span className=\"fa fa-user-plus\" /><b>&nbsp;Sign Up</b> </ModalHeader>\r\n                            <Container>\r\n                                <Form style={{ margin: '20px 0px' }}>\r\n                                    <FormGroup>\r\n                                        <Label style={{ fontSize: '20px' }} for=\"account\"><span className=\"fa fa-user-circle\" /><b>&nbsp;Account</b></Label>\r\n                                        <Input  value={this.state.signupAccount} onChange={(e) => { this.setState({signupAccount : e.target.value}) }} type=\"acount\" name=\"acount\" id=\"account\"  placeholder=\"Type yout account!\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label style={{ fontSize: '20px' }} for=\"password\"><span className=\"fa fa-key\" /><b>&nbsp;Password</b></Label>\r\n                                        <Input value={this.state.signupPassword} onChange={(e) => { this.setState({signupPassword : e.target.value}) }} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Type yout password!\" />\r\n                                    </FormGroup>\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <span>\r\n                                            <Button color='primary' style={{ marginTop: '5px' }} onClick={this.onSubmitSignup}>\r\n                                                {this.props.onSignup ?\r\n                                                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-lg fa-fw text-warning\"></span>\r\n                                                    :\r\n                                                    <span>&nbsp;Signup!!&nbsp;</span>\r\n                                                }\r\n                                            </Button>\r\n                                        </span>\r\n                                        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                        <span>\r\n                                            <Button color='secondary' style={{ marginTop: '5px' }} onClick={() => { this.props.showSignUpForm(false) }}> Abort QQ </Button>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'center', width: '100%', fontSize: '20px', marginBottom: '10px', fontFamily: 'impact', color: 'red', WebkitTextStroke: '1px black' }}>\r\n                                        <b>{this.props.signupErrorMsg}</b>\r\n                                    </div>\r\n                                </Form>\r\n                            </Container>\r\n                        </Card>\r\n\r\n                    </Modal>\r\n                </div>\r\n\r\n                <Container style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                    <Row>\r\n                        <Col sm={{ size: 10 }} md={{ size: 8, offset: 2 }} >\r\n                            <Card style={{ background: `rgba(237,115,45, 0.7)` }}>\r\n                                <Container>\r\n                                    <Form style={{ margin: '20px 0px' }}>\r\n                                        <FormGroup>\r\n                                            <Label style={{ fontSize: '20px' }} for=\"account\"><span className=\"fa fa-user-circle\" /><b>Account</b></Label>\r\n                                            <Input value={this.state.loginAccount}  onChange={(e) => { this.setState({loginAccount : e.target.value}) }} type=\"acount\" name=\"acount\" id=\"account\" placeholder=\"Type yout account!\" />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label style={{ fontSize: '20px' }} for=\"password\"><span className=\"fa fa-key\" /><b>Password</b></Label>\r\n                                            <Input value={this.state.loginPassword}  onChange={(e) => { this.setState({loginPassword : e.target.value}) }} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Type yout password!\" />\r\n                                        </FormGroup>\r\n                                        <FormGroup check>\r\n                                            <Label check>\r\n                                                <input ref={this.rememberRef} name=\"remember\" id=\"remember\" type=\"checkbox\" />\r\n                                    Remember my account/password\r\n                                </Label>\r\n                                        </FormGroup>\r\n                                        <span>\r\n                                            <Button color='primary' style={{ marginTop: '5px' }} onClick={this.onLoginClicked}>\r\n                                                {this.props.onLogin ?\r\n                                                    <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-lg fa-fw text-warning\"></span>\r\n                                                    :\r\n                                                    <span>&nbsp;&nbsp;&nbsp;Login&nbsp;&nbsp;&nbsp;</span>\r\n                                                }\r\n                                            </Button>\r\n                                        </span>\r\n                                    &nbsp;&nbsp;&nbsp;or sign up your account &nbsp;\r\n                                        <a href='#' onClick={(e) => { this.onSignUpClicked(e) }}>HERE</a>\r\n                                    </Form>\r\n                                    <div style={{ fontSize: '20px', marginBottom: '10px', fontFamily: 'impact', color: 'red', WebkitTextStroke: '1px black' }}>\r\n                                        <b>{this.props.loginErrorMsg}</b>\r\n                                    </div>\r\n                                </Container>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(LoginComponent)","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\loginAction.js",["147"],"// @ts-check \r\nimport { SET_SIGN_UP_FORM , SET_LOGIN_ERROR_MSG , ON_LOGIN , ON_SIGN_UP , SET_SIGN_UP_ERROR_MSG} from './ActionTypes'\r\nimport {createActions} from 'redux-actions'\r\n\r\n\r\nexport const set_sign_up_form = (show) => (\r\n    {\r\n        type: SET_SIGN_UP_FORM,\r\n        payload: show\r\n    }\r\n)\r\nexport const set_login_error_msg = (error) =>(\r\n    {\r\n        type: SET_LOGIN_ERROR_MSG,\r\n        payload: error\r\n    }\r\n )\r\n\r\n export const set_sign_up_error_msg = (error) =>(\r\n    {\r\n        type: SET_SIGN_UP_ERROR_MSG,\r\n        payload: error\r\n    }\r\n )\r\n\r\n export const on_login = () =>(\r\n     {\r\n        type: ON_LOGIN,\r\n     }\r\n )\r\n\r\n export const on_sign_up = () =>(\r\n    {\r\n       type: ON_SIGN_UP,\r\n    }\r\n)\r\n\r\n ","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinReducers.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\bulletinActions.js",["148"],"import { SET_USER_LIST, SET_OTHER_POSTS, SET_OTHER_PROFILE, DELETE_POST, EDIT_POST, SET_FOLLOW_ERROR_MSG, SET_POSTS, SET_POSTS_READY, SHOW_CREATE_POST , SET_SEARCH_USER , SHOW_SEARCH_USER, SET_RANDOM_POSTS } from './ActionTypes'\r\nimport {createActions} from 'redux-actions'\r\n\r\n\r\nexport const set_user_list = (userList) =>(\r\n    {\r\n        type: SET_USER_LIST,\r\n        payload: userList\r\n    }\r\n)\r\n\r\nexport const set_other_posts = (posts) => (\r\n    {\r\n        type: SET_OTHER_POSTS,\r\n        payload: posts\r\n    }\r\n)\r\n\r\nexport const set_other_profile = (profile) => (\r\n    {\r\n        type: SET_OTHER_PROFILE,\r\n        payload: profile\r\n    }\r\n)\r\n\r\n\r\nexport const edit_post = (post) =>(\r\n    {\r\n        type: EDIT_POST,\r\n        payload: post\r\n    }\r\n)\r\n\r\nexport const delete_post = (postId) =>(\r\n    {\r\n        type: DELETE_POST,\r\n        payload: postId\r\n    }\r\n)\r\n\r\n\r\nexport const set_follow_error_msg = (error) => (\r\n    {\r\n        type: SET_FOLLOW_ERROR_MSG,\r\n        payload: error\r\n    }\r\n)\r\n\r\n\r\nexport const set_posts = (posts) => (\r\n    {\r\n        type: SET_POSTS,\r\n        payload: posts\r\n    }\r\n)\r\n\r\nexport const set_random_posts = (rPosts) =>(\r\n    {\r\n        type: SET_RANDOM_POSTS,\r\n        payload: rPosts\r\n    }\r\n)\r\n\r\nexport const set_posts_ready =(ready) =>(\r\n    {\r\n        type: SET_POSTS_READY,\r\n        payload: ready\r\n    }\r\n )// boolean\r\n\r\nexport const show_create_post = (show) => (\r\n    {\r\n        type: SHOW_CREATE_POST,\r\n        payload: show\r\n    }\r\n)\r\n\r\nexport const set_search_user = (users) => (\r\n    {\r\n        type: SET_SEARCH_USER,\r\n        payload: users\r\n    }\r\n)\r\n\r\nexport const show_search_user = (show) => (\r\n    {\r\n        type: SHOW_SEARCH_USER,\r\n        payload: show\r\n    }\r\n)\r\n","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appActions.js",[],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\redux\\appReducers.js",["149","150","151"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bulletinComponent.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import { Component, createElement } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport { Container, Col, Row, CardImg, Card, CardBody, CardText, Button, Input } from 'reactstrap'\r\nimport { action } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { withRouter, Switch, Route, NavLink, Redirect, useHistory } from 'react-router-dom'\r\n\r\n\r\nimport { set_posts, set_posts_ready, show_create_post, set_search_user, show_search_user } from '../redux/bulletinActions'\r\nimport webAPI from '../webapi'\r\nimport './css/bulletinComponent.css'\r\nimport '../common/DateFormat'\r\nimport Immutable from 'immutable'\r\nimport ProfileComponent from './profileComponent'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.bulletin.posts.toJS(),\r\n        randomPosts: state.bulletin.randomPosts,\r\n        searchUsers: state.bulletin.searchUsers,\r\n        showCreatePost: state.bulletin.showCreatePost, //好像沒用?\r\n        showSearchUsers: state.bulletin.showSearchUsers,\r\n        postsReady: state.bulletin.postsReady,\r\n        profile: Object.keys(state.app.profile.toJS()).length === 0 ?\r\n            null : state.app.profile.toJS(),\r\n        otherProfile: Object.keys(state.bulletin.otherProfile.toJS()).length === 0 ?\r\n            null : state.bulletin.otherProfile.toJS(),\r\n        otherPosts: state.bulletin.otherPosts.toJS(),\r\n        userList: state.bulletin.userList.toJS(),\r\n        postImages: state.app.postImages.toJS(),\r\n        profileImages: state.app.profileImages.toJS(),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    const fetchUserPost = (userAccount) => { webAPI.fetchUserPost(dispatch, userAccount) }\r\n\r\n    return {\r\n        fetchPost: () => { webAPI.fetchPosts(dispatch) },\r\n        fetchUserPost: fetchUserPost,\r\n        fetchRandomPost: () => { webAPI.fetchRandomPosts(dispatch) },\r\n        fetchUsers: (userPrefix) => { webAPI.fetchUsers(dispatch, userPrefix) },\r\n        login: () => { webAPI.login(dispatch, '123', '123123') },\r\n        // this is because we are logining with session cookie \r\n\r\n        deletePost: (postId) => { webAPI.deletePost(dispatch, postId) },\r\n        editPost: (postId, postContent, postImg) => { webAPI.editPost(dispatch, postId, postContent, postImg) },\r\n        //fetchProfile: (profileId, callBack) => { webAPI.fetchProfile(dispatch, profileId, callBack) },\r\n        setProfile: (profile, profileAccount, callBack, userList) => { webAPI.setProfile(dispatch, profile, profileAccount, callBack, userList) },\r\n        editProfile: (profile, account, modifySelf) => { webAPI.editProfile(dispatch, profile, account, modifySelf, fetchUserPost) },\r\n        followUser: (account) => { webAPI.followUser(dispatch, account) },\r\n        unfollowUser: (account) => { webAPI.unfollowUser(dispatch, account) },\r\n        createPost: (postContent, postImg, history, path) => {\r\n\r\n            let goBackToBulletin = () => {\r\n                history.push(path)\r\n            }\r\n\r\n            webAPI.createPost(dispatch, postContent, postImg, goBackToBulletin)\r\n\r\n        },\r\n        getPostImage: (imageId, postId) => { webAPI.getPostImage(dispatch, imageId, postId) },\r\n        getProfileImage: (userId) => { webAPI.getProfileImage(dispatch, userId) },\r\n        editProfileImage: (profileImg) =>{webAPI.editProfileImage(dispatch,profileImg)},\r\n\r\n    }\r\n}\r\n\r\n\r\nclass BulletinComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.renderProfileImage = this.renderProfileImage.bind(this)\r\n\r\n        this.renderPost = this.renderPost.bind(this)\r\n        this.renderPosts = this.renderPosts.bind(this)\r\n        this.renderPostsPage = this.renderPostsPage.bind(this)\r\n        this.renderCreatePost = this.renderCreatePost.bind(this)\r\n        this.renderHeader = this.renderHeader.bind(this)\r\n        this.renderProfile = this.renderProfile.bind(this)\r\n\r\n        this.createPostTextareaRef = React.createRef()\r\n        this.uploadImgRef = React.createRef()\r\n\r\n        this.nowDate = new Date()\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            imgToUploadName: '',\r\n            fetchingProfile: false,\r\n            fetchedPrefix: ''\r\n        }\r\n\r\n        ///////////////////////////////\r\n        // NEEEEEEED to DELETE  ///////\r\n        ///////////////////////////////\r\n        // only for test\r\n        this.props.login()\r\n\r\n        console.log('constructor')\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        console.log('will mount')\r\n        this.props.fetchPost()\r\n\r\n\r\n    }\r\n\r\n    renderProfileImage(userId) {\r\n\r\n        let profileImage = '/assets/profileImage/default.png'\r\n        let filtered = this.props.profileImages.filter(\r\n            item => {\r\n                return item.name === userId\r\n            }\r\n        )\r\n\r\n        if (filtered.length == 0) {\r\n            this.props.getProfileImage(userId)\r\n        }\r\n\r\n        if (filtered.length > 0) {\r\n            filtered = filtered[0]\r\n            let temp = Buffer.from(filtered.img.data).toString('base64')\r\n            profileImage = 'data:image/png;base64,' + temp\r\n        }\r\n\r\n        return profileImage\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div className='postLoading'>\r\n                <span style={{ marginTop: '10px' }} className=\"fa fa-spinner fa-pulse fa-2x fa-fw text-warning\"></span>\r\n                <b style={{ color: 'white', WebkitTextStroke: '1px black' }}> Posts Now Loading... </b>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPost(post) {\r\n\r\n        //console.log('render post')\r\n        //console.log(post)\r\n        let postCardRef = React.createRef()\r\n        let postImage = []\r\n        let displayPostImage = null\r\n\r\n        let postProfileImage = this.renderProfileImage(post.user._id)\r\n\r\n        if (post.image) {\r\n            postImage = this.props.postImages.filter(\r\n                item => {\r\n                    //console.log('filter post image')\r\n                    return item.name === post._id\r\n                }\r\n            )\r\n        }\r\n\r\n        if (post.image && postImage.length == 0) {\r\n            //console.log('get image!')\r\n            this.props.getPostImage(post.image, post._id)\r\n        }\r\n        else if (post.image && postImage.length > 0) {\r\n            //postImage = postImage.toJS()\r\n            //srcString = 'data:image/jpeg;base64,' + postImage.img.data.toString('base64')\r\n            postImage = postImage[0]\r\n            let temp = Buffer.from(postImage.img.data).toString('base64')\r\n            displayPostImage = 'data:image/png;base64,' + temp\r\n        }\r\n\r\n\r\n        let deletePost = () => {\r\n            //console.log('delete'+ post._id)\r\n            //postCardRef.current.style.opacity = 0\r\n            postCardRef.current.classList.add('disappearing')\r\n            this.props.deletePost(post._id)\r\n        }\r\n\r\n        let editPost = () => {\r\n\r\n            let contentEdit = postCardRef.current.querySelector('.contentEdit')\r\n            let submitEdit = postCardRef.current.querySelector('.submitEditBtn')\r\n            let editPost = postCardRef.current.querySelector('.editPostBtn')\r\n            let postCardContent = postCardRef.current.querySelector('.postCardContent')\r\n\r\n            contentEdit.classList.remove('invisible')\r\n            postCardContent.classList.add('invisible')\r\n\r\n            submitEdit.classList.remove('invisible')\r\n            submitEdit.classList.add('order-1')\r\n            editPost.classList.add('order-0')\r\n\r\n            editPost.classList.add('invisible')\r\n\r\n\r\n            contentEdit.value = post.content\r\n        }\r\n\r\n        let submitEdit = () => {\r\n\r\n            let contentEdit = postCardRef.current.querySelector('.contentEdit')\r\n            let submitEdit = postCardRef.current.querySelector('.submitEditBtn')\r\n            let editPost = postCardRef.current.querySelector('.editPostBtn')\r\n            let postCardContent = postCardRef.current.querySelector('.postCardContent')\r\n\r\n\r\n            contentEdit.classList.add('invisible')\r\n            postCardContent.classList.remove('invisible')\r\n\r\n\r\n            editPost.classList.remove('invisible')\r\n            editPost.classList.remove('order-0')\r\n\r\n            submitEdit.classList.remove('order-1')\r\n            submitEdit.classList.add('invisible')\r\n\r\n            this.props.editPost(post._id, contentEdit.value, post.attachImage)\r\n\r\n        }\r\n\r\n        return (\r\n            <div ref={postCardRef} key={post._id} >\r\n                <div className='postInterval' />\r\n                <div className='container postCard'>\r\n                    <div className='row' style={{ marginTop: '10px' }}>\r\n                        <div className='col-1'>\r\n                            <img src={postProfileImage} className='postCardImg' />\r\n                        </div>\r\n                        <div className='col-5 offset-1'>\r\n                            <div className='postCardUser'>\r\n                                <b >{post.user.alias + '@' + post.user.account}</b>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4 ml-auto\">\r\n                            <div className='postCardDate'>\r\n                                {new Date(post.modifyDate).format(\"yyyy-MM-dd hh:mm:ss\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr className='separateLine' />\r\n                    <div className='row'>\r\n                        <div className='postCardMain col-10 offset-1'>\r\n\r\n                            <div className='postCardContent'>\r\n\r\n                                {post.content}\r\n\r\n                            </div>\r\n\r\n                            <textarea className='invisible contentEdit' name='createPost' id='createPost'>\r\n\r\n                            </textarea>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='postImageArea'>\r\n                        {\r\n                            displayPostImage ?\r\n                                <img style={{ height: '100%', width: 'auto' }}\r\n                                    src={displayPostImage} />\r\n                                :\r\n                                null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className='row justify-content-end'>\r\n                        {\r\n                            this.props.profile.account === post.user.account ?\r\n                                <>\r\n                                    <Button onClick={submitEdit} className='invisible submitEditBtn functionBtn' color='primary'> <i className=\"fa fa-upload\" /> </Button>\r\n                                    <Button onClick={editPost} className='editPostBtn functionBtn' color='primary'> <i className=\"fa fa-edit\" /> </Button>\r\n                                    <Button onClick={deletePost} className='order-3 functionBtn' color='primary'> <i className=\"fa fa-times-circle\" /> </Button>\r\n                                </>\r\n                                :\r\n                                null\r\n                        }\r\n                    </div>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPosts() {\r\n\r\n        console.log('posts')\r\n        console.log(this.props.location.pathname)\r\n\r\n        if (this.props.postsReady) {\r\n\r\n            if (this.props.location.pathname === '/bulletin/explore') {\r\n                return (\r\n                    <div >\r\n                        {\r\n                            this.props.randomPosts.filter(item => { return item !== null }).map((item) => {\r\n                                return this.renderPost(item)\r\n                            })\r\n                        }\r\n                        <div className='postInterval' />\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div >\r\n                        {\r\n                            this.props.posts.filter(item => { return item !== null }).map((item) => {\r\n                                return this.renderPost(item)\r\n                            })\r\n                        }\r\n                        <div className='postInterval' />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return this.renderLoading()\r\n        }\r\n    }\r\n\r\n    renderPostsPage() {\r\n        let posts = this.renderPosts()\r\n        let header = this.renderHeader()\r\n\r\n        return (\r\n            <div style={{ maxWidth: '100%' }}>\r\n\r\n                <div className='postContainer'>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderCreatePost() {\r\n\r\n        let clearText = () => {\r\n            this.createPostTextareaRef.current.value = ''\r\n        }\r\n\r\n        let uploadImg = () => {\r\n            console.log(this.uploadImgRef.current.files[0])\r\n            this.setState(\r\n                {\r\n                    ...this.state,\r\n                    imgToUploadName: this.uploadImgRef.current.files[0].name + ' is ready!'\r\n                }\r\n            )\r\n        }\r\n\r\n        let submitPost = () => {\r\n\r\n            let content = this.createPostTextareaRef.current.value\r\n            let image = null\r\n\r\n            if (!content) {\r\n                console.log('content cannot be null')\r\n                return\r\n            }\r\n\r\n            console.log('submit post')\r\n            if (this.uploadImgRef.current.files.length > 0) {\r\n                console.log(this.uploadImgRef.current.files[0])\r\n                image = this.uploadImgRef.current.files[0]\r\n            }\r\n\r\n            this.props.createPost(content, image, this.props.history, this.props.match.path)\r\n\r\n        }\r\n\r\n        let header = this.renderHeader()\r\n\r\n        if (this.props.profile === null) {\r\n            return (\r\n                <div>\r\n                    {}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {}\r\n                <div className='postContainer' style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                    <div className='container'>\r\n                        <div className='container postCard'>\r\n                            <div className='row' style={{ marginTop: '10px' }}>\r\n                                <div className='col-1'>\r\n                                    <img src='/assets/yoo.png' className='postCardImg' />\r\n                                </div>\r\n                                <div className='col-7 offset-1'>\r\n                                    <div className='postCardUser'>\r\n                                        <b >{this.props.profile.alias} , &nbsp;Try to post something!</b>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3 ml-auto\">\r\n                                    <div className='postCardDate' style={{ textAlign: 'center' }}>\r\n                                        {this.nowDate.toLocaleDateString()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className='separateLine' />\r\n                            <div className='row'>\r\n                                <div className='col-10 offset-1'>\r\n                                    <textarea ref={this.createPostTextareaRef} className='contentEdit' name='createPost' id='createPost'>\r\n                                    </textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row' >\r\n                                <div className='col-10 offset-1' style={{ marginBottom: '10px', display: 'flex', justifyContent: 'flex-end' }}>\r\n\r\n                                    <p style={{ margin: 'auto 0' }}> {this.state.imgToUploadName} </p>\r\n                                    <input ref={this.uploadImgRef} type=\"file\" id=\"uploadImg\" accept=\"image/*\" style={{ display: 'none' }} onChange={() => { uploadImg() }} />\r\n\r\n                                    <Button onClick={() => { this.uploadImgRef.current.click() }} color='primary' style={{ marginRight: '5px' }}>\r\n                                        +Image\r\n                                    </Button>\r\n                                    <Button onClick={clearText} color='primary' style={{ marginRight: '5px' }}>Clear</Button>\r\n                                    <Button onClick={submitPost} color='success'>Submit</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderHeader() {\r\n\r\n        let searchUserRef = React.createRef()\r\n\r\n        let headerProfileImage = this.props.profile ? this.renderProfileImage(this.props.profile._id) :\r\n            '/assets/profileImage/default.png'\r\n\r\n        let fetchSearchResult = (prefix) => {\r\n\r\n            if (this.state.fetchedPrefix !== prefix) {\r\n                this.props.fetchUsers(prefix)\r\n            }\r\n\r\n            this.setState({ fetchedPrefix: prefix })\r\n\r\n        }\r\n\r\n        let searchOnFocus = (prefix) => {\r\n\r\n            if (this.state.fetchedPrefix !== prefix) {\r\n                this.props.fetchUsers(prefix)\r\n            }\r\n\r\n\r\n\r\n            this.setState({ fetchedPrefix: prefix })\r\n\r\n            let query = this.isMobile ? '.searchResultMobile' : '.searchResult'\r\n            let searchResultDiv = searchUserRef.current.querySelector(query)\r\n            searchResultDiv.classList.remove('invisible')\r\n\r\n        }\r\n\r\n        let searchOnBlur = () => {\r\n            let query = this.isMobile ? '.searchResultMobile' : '.searchResult'\r\n            let searchResultDiv = searchUserRef.current.querySelector(query)\r\n\r\n            setTimeout(() => { searchResultDiv.classList.add('invisible') }, 100)\r\n            //searchResultDiv.classList.add('invisible')\r\n        }\r\n\r\n        let linkToProfile = (profile) => {\r\n            console.log('link')\r\n            console.log(profile.account)\r\n            console.log(this.props.myHistory)\r\n            //browserHistory.push('/profile/' + profile.account)\r\n            this.props.history.push((`${this.props.match.path}/profile/` + profile.account))\r\n            //this.setState(this.state)\r\n\r\n            //this.props.history.go()\r\n\r\n        }\r\n\r\n\r\n        if (this.isMobile) {\r\n            return (\r\n                <div className='bulletinHeaderMobile'>\r\n                    <div ref={searchUserRef} className='searchUserMobile'>\r\n\r\n                        <div className='searchResultMobile invisible'>\r\n                            {\r\n                                this.props.searchUsers.map(\r\n                                    (item) => {\r\n                                        let searchEntryProfileImage = this.renderProfileImage(item._id)\r\n                                        return (\r\n                                            <div onClick={() => { linkToProfile(item) }} key={item.account} className='searchEntry'>\r\n                                                <span>\r\n                                                    <img\r\n                                                        src={\r\n                                                            searchEntryProfileImage\r\n                                                        }\r\n                                                        className='searchUserImg' />\r\n                                                </span>\r\n                                                { item.alias + '@' + item.account}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <input onBlur={searchOnBlur} onFocus={(e) => { searchOnFocus(e.target.value) }} onChange={(e) => { fetchSearchResult(e.target.value) }} className='searchBarMobile' type='text' placeholder='search other user by account'>\r\n                        </input>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div className='bulletinHeader' style={{ display: 'flex' }}>\r\n\r\n                    <span style={{ flexBasis: '1vw' }} />\r\n\r\n                    <img className='userImg' src={headerProfileImage} />\r\n\r\n                    <span /> <b style={{ overflowX: 'hidden', minWidth: '5vw', maxWidth: '10vw', textAlign: 'center' }}>{this.props.profile ? this.props.profile.alias : \"Guest\"} </b><span />\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/create`}><button className='newPostButton btn' ><span className=\"fa fa-plus-square fa-fw\" /><span className='textself'>  &nbsp;New Post&nbsp;  </span></button></NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/`}>\r\n                        <button onClick={() => { this.props.fetchPost() }} className='randomPostButton btn'><span className=\"fa fa-stack-overflow fa-fw\" /> <span className='textself'>&nbsp;My Bulletin&nbsp; </span> </button>\r\n                    </NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <NavLink style={{ color: 'black' }} to={`${this.props.match.path}/explore`}>\r\n                        <button onClick={() => { this.props.fetchRandomPost() }} className='randomPostButton btn'><span className=\"fa fa-globe fa-fw\" /><span className='textself'> &nbsp;Explore&nbsp; </span></button>\r\n                    </NavLink>\r\n                    <span > <b style={{ fontSize: '5vh' }}>|</b> </span>\r\n\r\n                    <div ref={searchUserRef} className='searchUser'>\r\n\r\n                        <div className='searchResult invisible'>\r\n                            {\r\n                                this.props.searchUsers.map(\r\n                                    (item) => {\r\n                                        let searchEntryProfileImage = this.renderProfileImage(item._id)\r\n                                        return (\r\n                                            <div onClick={() => { linkToProfile(item) }} key={item.account} className='searchEntry'>\r\n                                                <span><img src={\r\n                                                   searchEntryProfileImage\r\n                                                }\r\n                                                    className='searchUserImg' /></span>\r\n                                                { item.alias + '@' + item.account}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <input onBlur={searchOnBlur} onFocus={(e) => { searchOnFocus(e.target.value) }} onChange={(e) => { fetchSearchResult(e.target.value) }} className='searchBar' type='text' placeholder='search other user by account'>\r\n                        </input>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderProfile({ match }) {\r\n\r\n        let header = this.renderHeader()\r\n        console.log('params')\r\n        console.log(match.params)\r\n\r\n        let userAccount = match.params.profileId\r\n\r\n        if (userAccount === undefined && this.props.profile !== null) {\r\n            userAccount = this.props.profile.account\r\n        }\r\n\r\n        console.log(userAccount)\r\n\r\n        /*\r\n        let profile\r\n        if(userAccount === this.props.profile.account){\r\n            profile = this.props.profile\r\n        }\r\n        else{\r\n            if(this.props.otherProfile !== null && userAccount === this.props.otherProfile.account){\r\n                profile = this.props.otherProfile\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n        */\r\n\r\n        return (\r\n            <>\r\n                {}\r\n                {  (userAccount === undefined || this.props.profile === null) ?\r\n                    <div />\r\n                    :\r\n                    <ProfileComponent editProfile={this.props.editProfile} renderPost={this.renderPost}\r\n                        myAccount={this.props.profile.account} posts={this.props.otherPosts}\r\n                        profileAccount={userAccount}\r\n                        profile={userAccount === this.props.profile.account ? this.props.profile : this.props.otherProfile}\r\n                        myProfile={this.props.profile}\r\n                        fetchUserPost={this.props.fetchUserPost}\r\n                        setProfile={this.props.setProfile}\r\n                        userList={this.props.userList}\r\n                        followUser={this.props.followUser}\r\n                        unfollowUser={this.props.unfollowUser}\r\n                        postImages={this.props.postImages}\r\n                        profileImages={this.props.profileImages}\r\n                        renderProfileImage={this.renderProfileImage}\r\n                        getPostImage={this.props.getPostImage}\r\n                        getProfileImage={this.props.getPostImage}\r\n                        editProfileImage={this.props.editProfileImage}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        this.isMobile = window.screen.width < window.screen.height\r\n\r\n        console.log('renderrr')\r\n        let header = this.renderHeader()\r\n\r\n        //console.log(this.props.match.url)\r\n        return (\r\n            <div>\r\n                {header}\r\n                <Route exact path={`${this.props.match.path}/`} component={this.renderPostsPage} />\r\n                <Route exact path={`${this.props.match.path}/explore`} component={this.renderPostsPage} />\r\n                <Route exact path={`${this.props.match.path}/create`} component={this.renderCreatePost} />\r\n                <Route exact path={`${this.props.match.path}/profile`} component={this.renderProfile} />\r\n                <Route path={`${this.props.match.path}/profile/:profileId`} component={this.renderProfile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(BulletinComponent))","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\common\\DateFormat.js",["184","185","186","187","188","189","190","191","192","193","194","195"],"// 對Date的擴充套件，將 Date 轉化為指定格式的String\r\n// 月(M)、日(d)、小時(h)、分(m)、秒(s)、季度(q) 可以用 1-2 個佔位符，\r\n// 年(y)可以用 1-4 個佔位符，毫秒(S)只能用 1 個佔位符(是 1-3 位的數字)\r\n// 例子：\r\n// (new Date()).format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423\r\n// (new Date()).format(\"yyyy-M-d hⓂ️s.S\")   ==> 2006-7-2 8:9:4.18\r\nDate.prototype.format = function (fmt) {\r\n    var o = {\r\n      \"M+\": this.getMonth() + 1, //月份\r\n      \"d+\": this.getDate(), //日\r\n      \"h+\": this.getHours(), //小時\r\n      \"m+\": this.getMinutes(), //分\r\n      \"s+\": this.getSeconds(), //秒\r\n      \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n      \"S\": this.getMilliseconds() //毫秒\r\n    };\r\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (var k in o)\r\n    if (new RegExp(\"(\" +  k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" +  o[k]).substr((\"\" + o[k]).length)));\r\n    return fmt;\r\n  }\r\n  \r\n  Date.prototype.addSeconds = function(seconds) {\r\n    this.setSeconds(this.getSeconds() + seconds);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addMinutes = function(minutes) {\r\n    this.setMinutes(this.getMinutes() + minutes);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addHours = function(hours) {\r\n    this.setHours(this.getHours() + hours);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addDays = function(days) {\r\n    this.setDate(this.getDate() + days);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addMonths = function(months) {\r\n    this.setMonth(this.getMonth() + months);\r\n    return this;\r\n  }\r\n  \r\n  Date.prototype.addYears = function(years) {\r\n    this.setFullYear(this.getFullYear() + years);\r\n    return this;\r\n  }\r\n  \r\n  function diffSeconds(milliseconds) {\r\n    return Math.floor(milliseconds / 1000);\r\n  }\r\n  \r\n  function diffMinutes(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60);\r\n  }\r\n  \r\n  function diffHours(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60 / 60);\r\n  }\r\n  \r\n  function diffDays(milliseconds) {\r\n    return Math.floor(milliseconds / 1000 / 60 / 60 / 24);\r\n  }\r\n  ","C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\profileComponent.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"C:\\Users\\clotha87762\\Desktop\\Yoooooo\\bullet_practice\\src\\components\\bottomComponent.js",["217","218","219"],"import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './css/bottomComponent.css'\r\n\r\n\r\n\r\n\r\n\r\nconst NavPanel = ({ setPopout, isPopped, isAuthed , userAlias , logout}) => {\r\n\r\n    let isPoppedOut = isPopped? ' poppedOut' : ''\r\n\r\n    console.log(isPoppedOut)\r\n\r\n    if (isAuthed) {\r\n        return(\r\n        <div className={'popoutPanel' + isPoppedOut}>\r\n            <div style={{ fontSize: '18px' }}>\r\n                    <b>\r\n                        {\"HELLLLO \" + userAlias}\r\n                    </b>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;BULLETIN\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/profile' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;PROFILE\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/logout' className='navlink' activeClassName='activeSide' onClick={logout}>\r\n                        <span className=\"fa fa-user-alt-slash\" /> &nbsp;LOGOUT\r\n                </NavLink>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className={'popoutPanel' + isPoppedOut}>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;HOME\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/login' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa fa-user-circle\" /> &nbsp;LOGIN\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FunctionPanel = ({ setPopout, isPopped }) => {\r\n\r\n    let isPoppedOut = isPopped? ' poppedOut' : ''\r\n\r\n    return(\r\n        <div className={'popoutPanel' + isPoppedOut}>\r\n            \r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/create' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-home\" /> &nbsp;New Post\r\n                    </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-comments\" /> &nbsp;My Bulletin\r\n                </NavLink>\r\n                </div>\r\n                <div className='popoutBlock'>\r\n                    <NavLink onClick={()=>{setPopout(false)}} to='/bulletin/explore' className='navlink' activeClassName='activeSide'>\r\n                        <span className=\"fa fa-id-badge\" /> &nbsp;Explore\r\n                </NavLink>\r\n                </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst BottomComponent = ({ profile , isAuthed, userAlias, logout }) => {\r\n\r\n    const [ popoutNav , setPopoutNav ] = React.useState(false)\r\n    const [ popoutFunc , setPopoutFunc ] = React.useState(false)\r\n\r\n\r\n    if (isAuthed) {\r\n        return (\r\n            <div className='bottomPanel'>\r\n                \r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutFunc(!popoutFunc)\r\n                        setPopoutNav(false)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-bars'></i>\r\n                </div>\r\n\r\n                    {\r\n                        profile===null?\r\n                        null\r\n                        :\r\n                        <div className='bottomUserBlock'>\r\n                            <img className='bottomProfileImage' src={profile.profileImage}/>\r\n                            <h6>{profile.alias}</h6>\r\n                        </div>\r\n                    }\r\n\r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutNav(!popoutNav)\r\n                        setPopoutFunc(false)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-compass'></i>\r\n                </div>\r\n                \r\n                <FunctionPanel setPopout={setPopoutFunc} isPopped={popoutFunc} />\r\n                <NavPanel setPopout={setPopoutNav} isPopped={popoutNav} isAuthed={isAuthed} userAlias={userAlias} logout={logout}/>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div className='bottomPanel'>\r\n                <div className='bottomBlock' onClick={()=>{\r\n                        setPopoutNav(!popoutNav)\r\n                    }}>\r\n                    <i className='fa fa-2x fa-compass'></i>\r\n                </div>\r\n                <NavPanel setPopout={setPopoutNav} isPopped={popoutNav} isAuthed={isAuthed} userAlias={userAlias} logout={logout}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default BottomComponent",{"ruleId":"220","severity":1,"message":"221","line":12,"column":25,"nodeType":"222","messageId":"223","endLine":12,"endColumn":35},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"220","severity":1,"message":"228","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":12},{"ruleId":"220","severity":1,"message":"229","line":3,"column":17,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"230","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":11,"column":25,"nodeType":"222","messageId":"223","endLine":11,"endColumn":35},{"ruleId":"220","severity":1,"message":"231","line":12,"column":15,"nodeType":"222","messageId":"223","endLine":12,"endColumn":18},{"ruleId":"220","severity":1,"message":"232","line":32,"column":7,"nodeType":"222","messageId":"223","endLine":32,"endColumn":14},{"ruleId":"233","severity":1,"message":"234","line":39,"column":6,"nodeType":"235","endLine":39,"endColumn":8,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":19,"nodeType":"222","messageId":"223","endLine":2,"endColumn":29},{"ruleId":"220","severity":1,"message":"237","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":43},{"ruleId":"220","severity":1,"message":"238","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"220","severity":1,"message":"239","line":3,"column":31,"nodeType":"222","messageId":"223","endLine":3,"endColumn":38},{"ruleId":"220","severity":1,"message":"240","line":3,"column":40,"nodeType":"222","messageId":"223","endLine":3,"endColumn":44},{"ruleId":"220","severity":1,"message":"241","line":3,"column":46,"nodeType":"222","messageId":"223","endLine":3,"endColumn":54},{"ruleId":"220","severity":1,"message":"242","line":3,"column":56,"nodeType":"222","messageId":"223","endLine":3,"endColumn":64},{"ruleId":"220","severity":1,"message":"243","line":3,"column":66,"nodeType":"222","messageId":"223","endLine":3,"endColumn":72},{"ruleId":"220","severity":1,"message":"244","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"245","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"246","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"247","line":8,"column":26,"nodeType":"222","messageId":"223","endLine":8,"endColumn":34},{"ruleId":"248","severity":1,"message":"249","line":109,"column":25,"nodeType":"250","endLine":109,"endColumn":53},{"ruleId":"220","severity":1,"message":"251","line":2,"column":9,"nodeType":"222","messageId":"223","endLine":2,"endColumn":22},{"ruleId":"220","severity":1,"message":"252","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":24},{"ruleId":"220","severity":1,"message":"253","line":6,"column":148,"nodeType":"222","messageId":"223","endLine":6,"endColumn":164},{"ruleId":"220","severity":1,"message":"254","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":30},{"ruleId":"220","severity":1,"message":"232","line":12,"column":5,"nodeType":"222","messageId":"223","endLine":12,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":18,"column":1,"nodeType":"257","endLine":1248,"endColumn":2},{"ruleId":"220","severity":1,"message":"258","line":99,"column":13,"nodeType":"222","messageId":"223","endLine":99,"endColumn":16},{"ruleId":"220","severity":1,"message":"259","line":100,"column":13,"nodeType":"222","messageId":"223","endLine":100,"endColumn":22},{"ruleId":"220","severity":1,"message":"259","line":224,"column":13,"nodeType":"222","messageId":"223","endLine":224,"endColumn":22},{"ruleId":"220","severity":1,"message":"259","line":357,"column":13,"nodeType":"222","messageId":"223","endLine":357,"endColumn":22},{"ruleId":"220","severity":1,"message":"260","line":476,"column":13,"nodeType":"222","messageId":"223","endLine":476,"endColumn":23},{"ruleId":"220","severity":1,"message":"261","line":803,"column":29,"nodeType":"222","messageId":"223","endLine":803,"endColumn":33},{"ruleId":"220","severity":1,"message":"262","line":966,"column":13,"nodeType":"222","messageId":"223","endLine":966,"endColumn":26},{"ruleId":"220","severity":1,"message":"263","line":1172,"column":25,"nodeType":"222","messageId":"223","endLine":1172,"endColumn":33},{"ruleId":"220","severity":1,"message":"237","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":43},{"ruleId":"220","severity":1,"message":"239","line":4,"column":26,"nodeType":"222","messageId":"223","endLine":4,"endColumn":33},{"ruleId":"220","severity":1,"message":"241","line":4,"column":41,"nodeType":"222","messageId":"223","endLine":4,"endColumn":49},{"ruleId":"220","severity":1,"message":"242","line":4,"column":51,"nodeType":"222","messageId":"223","endLine":4,"endColumn":59},{"ruleId":"220","severity":1,"message":"264","line":5,"column":43,"nodeType":"222","messageId":"223","endLine":5,"endColumn":52},{"ruleId":"220","severity":1,"message":"245","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":16},{"ruleId":"220","severity":1,"message":"265","line":10,"column":28,"nodeType":"222","messageId":"223","endLine":10,"endColumn":47},{"ruleId":"220","severity":1,"message":"266","line":10,"column":49,"nodeType":"222","messageId":"223","endLine":10,"endColumn":57},{"ruleId":"220","severity":1,"message":"267","line":10,"column":59,"nodeType":"222","messageId":"223","endLine":10,"endColumn":69},{"ruleId":"220","severity":1,"message":"221","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":20},{"ruleId":"220","severity":1,"message":"268","line":11,"column":22,"nodeType":"222","messageId":"223","endLine":11,"endColumn":29},{"ruleId":"269","severity":1,"message":"270","line":205,"column":41,"nodeType":"250","endLine":205,"endColumn":98},{"ruleId":"220","severity":1,"message":"251","line":3,"column":9,"nodeType":"222","messageId":"223","endLine":3,"endColumn":22},{"ruleId":"220","severity":1,"message":"251","line":2,"column":9,"nodeType":"222","messageId":"223","endLine":2,"endColumn":22},{"ruleId":"220","severity":1,"message":"271","line":21,"column":17,"nodeType":"222","messageId":"223","endLine":21,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":51,"column":17,"nodeType":"222","messageId":"274","endLine":51,"endColumn":28},{"ruleId":"220","severity":1,"message":"275","line":53,"column":17,"nodeType":"222","messageId":"223","endLine":53,"endColumn":26},{"ruleId":"220","severity":1,"message":"276","line":1,"column":21,"nodeType":"222","messageId":"223","endLine":1,"endColumn":34},{"ruleId":"220","severity":1,"message":"237","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":43},{"ruleId":"220","severity":1,"message":"238","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"220","severity":1,"message":"277","line":3,"column":21,"nodeType":"222","messageId":"223","endLine":3,"endColumn":24},{"ruleId":"220","severity":1,"message":"231","line":3,"column":26,"nodeType":"222","messageId":"223","endLine":3,"endColumn":29},{"ruleId":"220","severity":1,"message":"239","line":3,"column":31,"nodeType":"222","messageId":"223","endLine":3,"endColumn":38},{"ruleId":"220","severity":1,"message":"240","line":3,"column":40,"nodeType":"222","messageId":"223","endLine":3,"endColumn":44},{"ruleId":"220","severity":1,"message":"241","line":3,"column":46,"nodeType":"222","messageId":"223","endLine":3,"endColumn":54},{"ruleId":"220","severity":1,"message":"242","line":3,"column":56,"nodeType":"222","messageId":"223","endLine":3,"endColumn":64},{"ruleId":"220","severity":1,"message":"278","line":3,"column":74,"nodeType":"222","messageId":"223","endLine":3,"endColumn":79},{"ruleId":"220","severity":1,"message":"244","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"245","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"279","line":8,"column":22,"nodeType":"222","messageId":"223","endLine":8,"endColumn":28},{"ruleId":"220","severity":1,"message":"280","line":8,"column":46,"nodeType":"222","messageId":"223","endLine":8,"endColumn":54},{"ruleId":"220","severity":1,"message":"281","line":8,"column":56,"nodeType":"222","messageId":"223","endLine":8,"endColumn":66},{"ruleId":"220","severity":1,"message":"282","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"283","line":11,"column":21,"nodeType":"222","messageId":"223","endLine":11,"endColumn":36},{"ruleId":"220","severity":1,"message":"253","line":11,"column":38,"nodeType":"222","messageId":"223","endLine":11,"endColumn":54},{"ruleId":"220","severity":1,"message":"284","line":11,"column":56,"nodeType":"222","messageId":"223","endLine":11,"endColumn":71},{"ruleId":"220","severity":1,"message":"285","line":11,"column":73,"nodeType":"222","messageId":"223","endLine":11,"endColumn":89},{"ruleId":"220","severity":1,"message":"286","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":17},{"ruleId":"287","severity":1,"message":"288","line":134,"column":29,"nodeType":"289","messageId":"290","endLine":134,"endColumn":31},{"ruleId":"287","severity":1,"message":"288","line":175,"column":44,"nodeType":"289","messageId":"290","endLine":175,"endColumn":46},{"ruleId":"248","severity":1,"message":"249","line":243,"column":29,"nodeType":"250","endLine":243,"endColumn":83},{"ruleId":"248","severity":1,"message":"249","line":279,"column":33,"nodeType":"250","endLine":280,"endColumn":62},{"ruleId":"220","severity":1,"message":"291","line":343,"column":13,"nodeType":"222","messageId":"223","endLine":343,"endColumn":19},{"ruleId":"220","severity":1,"message":"291","line":392,"column":13,"nodeType":"222","messageId":"223","endLine":392,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":409,"column":37,"nodeType":"250","endLine":409,"endColumn":90},{"ruleId":"248","severity":1,"message":"249","line":516,"column":53,"nodeType":"250","endLine":520,"endColumn":85},{"ruleId":"248","severity":1,"message":"249","line":544,"column":21,"nodeType":"250","endLine":544,"endColumn":73},{"ruleId":"248","severity":1,"message":"249","line":571,"column":55,"nodeType":"250","endLine":574,"endColumn":81},{"ruleId":"220","severity":1,"message":"291","line":595,"column":13,"nodeType":"222","messageId":"223","endLine":595,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":7,"column":1,"nodeType":"294","messageId":"290","endLine":21,"endColumn":4},{"ruleId":"287","severity":1,"message":"288","line":19,"column":94,"nodeType":"289","messageId":"290","endLine":19,"endColumn":96},{"ruleId":"292","severity":1,"message":"293","line":23,"column":3,"nodeType":"294","messageId":"290","endLine":26,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":28,"column":3,"nodeType":"294","messageId":"290","endLine":31,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":33,"column":3,"nodeType":"294","messageId":"290","endLine":36,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":38,"column":3,"nodeType":"294","messageId":"290","endLine":41,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":43,"column":3,"nodeType":"294","messageId":"290","endLine":46,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":48,"column":3,"nodeType":"294","messageId":"290","endLine":51,"endColumn":4},{"ruleId":"220","severity":1,"message":"295","line":53,"column":12,"nodeType":"222","messageId":"223","endLine":53,"endColumn":23},{"ruleId":"220","severity":1,"message":"296","line":57,"column":12,"nodeType":"222","messageId":"223","endLine":57,"endColumn":23},{"ruleId":"220","severity":1,"message":"297","line":61,"column":12,"nodeType":"222","messageId":"223","endLine":61,"endColumn":21},{"ruleId":"220","severity":1,"message":"298","line":65,"column":12,"nodeType":"222","messageId":"223","endLine":65,"endColumn":20},{"ruleId":"220","severity":1,"message":"276","line":1,"column":21,"nodeType":"222","messageId":"223","endLine":1,"endColumn":34},{"ruleId":"220","severity":1,"message":"237","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":43},{"ruleId":"220","severity":1,"message":"238","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"220","severity":1,"message":"277","line":3,"column":21,"nodeType":"222","messageId":"223","endLine":3,"endColumn":24},{"ruleId":"220","severity":1,"message":"231","line":3,"column":26,"nodeType":"222","messageId":"223","endLine":3,"endColumn":29},{"ruleId":"220","severity":1,"message":"239","line":3,"column":31,"nodeType":"222","messageId":"223","endLine":3,"endColumn":38},{"ruleId":"220","severity":1,"message":"240","line":3,"column":40,"nodeType":"222","messageId":"223","endLine":3,"endColumn":44},{"ruleId":"220","severity":1,"message":"241","line":3,"column":46,"nodeType":"222","messageId":"223","endLine":3,"endColumn":54},{"ruleId":"220","severity":1,"message":"242","line":3,"column":56,"nodeType":"222","messageId":"223","endLine":3,"endColumn":64},{"ruleId":"220","severity":1,"message":"278","line":3,"column":74,"nodeType":"222","messageId":"223","endLine":3,"endColumn":79},{"ruleId":"220","severity":1,"message":"244","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"299","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":17},{"ruleId":"220","severity":1,"message":"245","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":20},{"ruleId":"220","severity":1,"message":"279","line":8,"column":22,"nodeType":"222","messageId":"223","endLine":8,"endColumn":28},{"ruleId":"220","severity":1,"message":"300","line":8,"column":30,"nodeType":"222","messageId":"223","endLine":8,"endColumn":35},{"ruleId":"220","severity":1,"message":"268","line":8,"column":37,"nodeType":"222","messageId":"223","endLine":8,"endColumn":44},{"ruleId":"220","severity":1,"message":"280","line":8,"column":46,"nodeType":"222","messageId":"223","endLine":8,"endColumn":54},{"ruleId":"220","severity":1,"message":"301","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":14},{"ruleId":"220","severity":1,"message":"286","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":243,"column":37,"nodeType":"250","endLine":245,"endColumn":41},{"ruleId":"220","severity":1,"message":"221","line":2,"column":19,"nodeType":"222","messageId":"223","endLine":2,"endColumn":29},{"ruleId":"302","severity":1,"message":"303","line":39,"column":125,"nodeType":"304","endLine":39,"endColumn":141},{"ruleId":"248","severity":1,"message":"249","line":115,"column":29,"nodeType":"250","endLine":115,"endColumn":93},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["305"],"no-negated-in-lhs",["306"],"'logo' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'Row' is defined but never used.","'cookies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginWithSession'. Either include it or remove the dependency array. If 'loginWithSession' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["307"],"'findRenderedDOMComponentWithClass' is defined but never used.","'Container' is defined but never used.","'CardImg' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardText' is defined but never used.","'Button' is defined but never used.","'action' is defined but never used.","'ReactDOM' is defined but never used.","'set_news_ready' is defined but never used.","'set_news' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createActions' is defined but never used.","'browserHistory' is defined but never used.","'show_create_post' is defined but never used.","'createBrowserHistory' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Map' is assigned a value but never used.","'mockPosts' is assigned a value but never used.","'mockUserJS' is assigned a value but never used.","'post' is assigned a value but never used.","'otherProfiles' is assigned a value but never used.","'response' is assigned a value but never used.","'ModalBody' is defined but never used.","'set_login_error_msg' is defined but never used.","'on_login' is defined but never used.","'on_sign_up' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'profileImage' is assigned a value but never used.","no-redeclare","'targetIndex' is already defined.","redeclared","'postImage' is assigned a value but never used.","'createElement' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'set_posts' is defined but never used.","'set_posts_ready' is defined but never used.","'set_search_user' is defined but never used.","'show_search_user' is defined but never used.","'Immutable' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'header' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","'diffSeconds' is defined but never used.","'diffMinutes' is defined but never used.","'diffHours' is defined but never used.","'diffDays' is defined but never used.","'connect' is defined but never used.","'Route' is defined but never used.","'webAPI' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},"Update the dependencies array to be: [loginWithSession]",{"range":"310","text":"311"},[1127,1129],"[loginWithSession]"]